# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from feast.types.Feature_pb2 import (
    Feature as feast___types___Feature_pb2___Feature,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from google.protobuf.timestamp_pb2 import (
    Timestamp as google___protobuf___timestamp_pb2___Timestamp,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class FeatureRow(google___protobuf___message___Message):
    entityKey = ... # type: typing___Text
    entityName = ... # type: typing___Text

    @property
    def features(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[feast___types___Feature_pb2___Feature]: ...

    @property
    def eventTimestamp(self) -> google___protobuf___timestamp_pb2___Timestamp: ...

    def __init__(self,
        entityKey : typing___Optional[typing___Text] = None,
        features : typing___Optional[typing___Iterable[feast___types___Feature_pb2___Feature]] = None,
        eventTimestamp : typing___Optional[google___protobuf___timestamp_pb2___Timestamp] = None,
        entityName : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> FeatureRow: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"eventTimestamp"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"entityKey",u"entityName",u"eventTimestamp",u"features"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"eventTimestamp",b"eventTimestamp"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"entityKey",b"entityName",b"eventTimestamp",b"features"]) -> None: ...
