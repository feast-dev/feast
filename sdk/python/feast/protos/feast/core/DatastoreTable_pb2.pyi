"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file

* Copyright 2021 The Feast Authors
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     https://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.wrappers_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class DatastoreTable(google.protobuf.message.Message):
    """Represents a Datastore table"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROJECT_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    DATABASE_FIELD_NUMBER: builtins.int
    project: builtins.str
    """Feast project of the table"""
    name: builtins.str
    """Name of the table"""
    @property
    def project_id(self) -> google.protobuf.wrappers_pb2.StringValue:
        """GCP project id"""
    @property
    def namespace(self) -> google.protobuf.wrappers_pb2.StringValue:
        """Datastore namespace"""
    @property
    def database(self) -> google.protobuf.wrappers_pb2.StringValue:
        """Firestore database"""
    def __init__(
        self,
        *,
        project: builtins.str = ...,
        name: builtins.str = ...,
        project_id: google.protobuf.wrappers_pb2.StringValue | None = ...,
        namespace: google.protobuf.wrappers_pb2.StringValue | None = ...,
        database: google.protobuf.wrappers_pb2.StringValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["database", b"database", "namespace", b"namespace", "project_id", b"project_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["database", b"database", "name", b"name", "namespace", b"namespace", "project", b"project", "project_id", b"project_id"]) -> None: ...

global___DatastoreTable = DatastoreTable
