"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class ModelMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    FEATURE_VIEW_FIELD_NUMBER: builtins.int
    FEATURE_SERVICE_FIELD_NUMBER: builtins.int
    FEATURES_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    TRAINING_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    name: builtins.str
    """Required: Unique model name"""
    @property
    def feature_view(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Optional: Associated feature view name (if used)"""
    @property
    def feature_service(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Optional: Associated feature service name (if used)"""
    @property
    def features(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Optional: Direct list of fully qualified feature references"""
    project: builtins.str
    """Project this model belongs to"""
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """Metadata (e.g., model purpose, version, tags)"""
    @property
    def training_timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Timestamp when model was trained"""
    description: builtins.str
    """Optional: Description of the model"""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        feature_view: collections.abc.Iterable[builtins.str] | None = ...,
        feature_service: collections.abc.Iterable[builtins.str] | None = ...,
        features: collections.abc.Iterable[builtins.str] | None = ...,
        project: builtins.str = ...,
        tags: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        training_timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        description: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["training_timestamp", b"training_timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["description", b"description", "feature_service", b"feature_service", "feature_view", b"feature_view", "features", b"features", "name", b"name", "project", b"project", "tags", b"tags", "training_timestamp", b"training_timestamp"]) -> None: ...

global___ModelMetadata = ModelMetadata
