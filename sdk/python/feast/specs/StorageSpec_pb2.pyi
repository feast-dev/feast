# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Mapping as typing___Mapping,
    MutableMapping as typing___MutableMapping,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class StorageSpec(google___protobuf___message___Message):
    class OptionsEntry(google___protobuf___message___Message):
        key = ... # type: typing___Text
        value = ... # type: typing___Text

        def __init__(self,
            key : typing___Optional[typing___Text] = None,
            value : typing___Optional[typing___Text] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> StorageSpec.OptionsEntry: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(self, field_name: typing_extensions___Literal[u"key",u"value"]) -> None: ...
        else:
            def ClearField(self, field_name: typing_extensions___Literal[b"key",b"value"]) -> None: ...

    id = ... # type: typing___Text
    type = ... # type: typing___Text

    @property
    def options(self) -> typing___MutableMapping[typing___Text, typing___Text]: ...

    def __init__(self,
        id : typing___Optional[typing___Text] = None,
        type : typing___Optional[typing___Text] = None,
        options : typing___Optional[typing___Mapping[typing___Text, typing___Text]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> StorageSpec: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"id",u"options",u"type"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"id",b"options",b"type"]) -> None: ...
