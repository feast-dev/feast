----------

CMake Error at CMakeLists.txt:274 (find_package):
        By not providing "FindArrow.cmake" in CMAKE_MODULE_PATH this project has
        asked CMake to find a package configuration file provided by "Arrow", but
        CMake did not find one.
      
        Could not find a package configuration file provided by "Arrow" with any of
        the following names:
      
          ArrowConfig.cmake
          arrow-config.cmake
      
        Add the installation prefix of "Arrow" to CMAKE_PREFIX_PATH or set
        "Arrow_DIR" to a directory containing one of the above files.  If "Arrow"
        provides a separate development package or SDK, be sure it has been
        installed.
      
------------------

python -m ensurepip --upgrade
python -m pip install pip-tools uv ninja
conan profile detect
make install-python-dependencies-dev
# pip install -e git+https://github.com/JaidedAI/EasyOCR@v1.7.2#egg=easyocr
uv pip install git+https://github.com/JaidedAI/EasyOCR@v1.7.2
    "milvus-lite @ git+https://github.com/milvus-io/milvus-lite@v2.4.11#subdirectory=python",

make lock-python-dependencies-all

# WORKS!!!
alias cachi2='podman run --rm -ti -v "$PWD:$PWD:z" -w "$PWD" quay.io/konflux-ci/cachi2:latest'
rm -rf ./cachi2-output
cachi2 fetch-deps \
  --output ./cachi2-output \
  '{
  "type": "pip",
  "path": ".",
  "requirements_files": ["sdk/python/feast/infra/feature_servers/multicloud/requirements.txt"],
  "requirements_build_files": ["sdk/python/requirements/py3.11-build-requirements.txt", "sdk/python/requirements/py3.11-pandas-requirements.txt", "sdk/python/requirements/py3.11-sdist-requirements.txt"],
  "allow_binary": "false"
}'

podman build \
  --tag sdist-builder:latest \
  -f sdk/python/feast/infra/feature_servers/multicloud/Dockerfile.sdist.builder \
  sdk/python/feast/infra/feature_servers/multicloud

rm -f cachi2.env
cachi2 generate-env ./cachi2-output -o ./cachi2.env --for-output-dir /tmp/cachi2-output

podman build \
  --volume "$(realpath ./cachi2-output)":/tmp/cachi2-output:Z \
  --volume "$(realpath ./cachi2.env)":/tmp/cachi2.env:Z \
  --network none \
  --tag foo \
  -f sdk/python/feast/infra/feature_servers/multicloud/Dockerfile.sdist \
  sdk/python/feast/infra/feature_servers/multicloud

# test that it worked
podman run --rm -ti foo feast version

# WORKS!!!
rm -rf cachi2-output
cachi2 fetch-deps \
  --output ./cachi2-output \
  '{
  "type": "pip",
  "path": ".",
  "requirements_files": ["sdk/python/feast/infra/feature_servers/multicloud/requirements.txt"],
  "requirements_build_files": ["sdk/python/requirements/py3.11-ci-requirements.txt"],
  "allow_binary": "true"
}'

# WORKS!!!
rm -rf cachi2-output
cachi2 fetch-deps \
  --output ./cachi2-output \
  '{
  "type": "pip",
  "path": ".",
  "requirements_files": ["sdk/python/feast/infra/feature_servers/multicloud/requirements.txt"],
  "requirements_build_files": ["sdk/python/requirements/py3.11-source-requirements.txt"],
  "allow_binary": "false"
}'

cachi2 fetch-deps \
  --output ./cachi2-output \
  '{
  "type": "pip",
  "path": ".",
  "requirements_files": ["sdk/python/feast/infra/feature_servers/multicloud/requirements.txt"],
  "requirements_build_files": ["sdk/python/requirements/py3.11-build-requirements.txt", "sdk/python/requirements/py3.11-sdist-requirements.txt"],
  "allow_binary": "false"
}'
