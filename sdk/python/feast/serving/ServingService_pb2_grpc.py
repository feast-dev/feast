# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from feast.serving import (
    ServingService_pb2 as feast_dot_serving_dot_ServingService__pb2,
)


class ServingServiceStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
        """Constructor.

    Args:
      channel: A grpc.Channel.
    """
        self.GetFeastServingVersion = channel.unary_unary(
            "/feast.serving.ServingService/GetFeastServingVersion",
            request_serializer=feast_dot_serving_dot_ServingService__pb2.GetFeastServingVersionRequest.SerializeToString,
            response_deserializer=feast_dot_serving_dot_ServingService__pb2.GetFeastServingVersionResponse.FromString,
        )
        self.GetFeastServingType = channel.unary_unary(
            "/feast.serving.ServingService/GetFeastServingType",
            request_serializer=feast_dot_serving_dot_ServingService__pb2.GetFeastServingTypeRequest.SerializeToString,
            response_deserializer=feast_dot_serving_dot_ServingService__pb2.GetFeastServingTypeResponse.FromString,
        )
        self.GetOnlineFeatures = channel.unary_unary(
            "/feast.serving.ServingService/GetOnlineFeatures",
            request_serializer=feast_dot_serving_dot_ServingService__pb2.GetFeaturesRequest.SerializeToString,
            response_deserializer=feast_dot_serving_dot_ServingService__pb2.GetOnlineFeaturesResponse.FromString,
        )
        self.GetBatchFeatures = channel.unary_unary(
            "/feast.serving.ServingService/GetBatchFeatures",
            request_serializer=feast_dot_serving_dot_ServingService__pb2.GetFeaturesRequest.SerializeToString,
            response_deserializer=feast_dot_serving_dot_ServingService__pb2.GetBatchFeaturesResponse.FromString,
        )
        self.ReloadJob = channel.unary_unary(
            "/feast.serving.ServingService/ReloadJob",
            request_serializer=feast_dot_serving_dot_ServingService__pb2.ReloadJobRequest.SerializeToString,
            response_deserializer=feast_dot_serving_dot_ServingService__pb2.ReloadJobResponse.FromString,
        )


class ServingServiceServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetFeastServingVersion(self, request, context):
        """Get version information about this Feast serving.
    """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetFeastServingType(self, request, context):
        """Get Feast serving store type: online or batch.
    """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetOnlineFeatures(self, request, context):
        """Get online features synchronously.
    """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetBatchFeatures(self, request, context):
        """Get batch features asynchronously. 

    The client should check the status of the returned job periodically by
    calling ReloadJob to determine if the job has completed successfully 
    or with an error. If the job completes successfully i.e.
    status = JOB_STATUS_DONE with no error, then the client can check
    the file_uris for the location to download feature values data.
    The client is assumed to have access to these file URIs.
    """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ReloadJob(self, request, context):
        """Reload the job status with the latest state.
    """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_ServingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "GetFeastServingVersion": grpc.unary_unary_rpc_method_handler(
            servicer.GetFeastServingVersion,
            request_deserializer=feast_dot_serving_dot_ServingService__pb2.GetFeastServingVersionRequest.FromString,
            response_serializer=feast_dot_serving_dot_ServingService__pb2.GetFeastServingVersionResponse.SerializeToString,
        ),
        "GetFeastServingType": grpc.unary_unary_rpc_method_handler(
            servicer.GetFeastServingType,
            request_deserializer=feast_dot_serving_dot_ServingService__pb2.GetFeastServingTypeRequest.FromString,
            response_serializer=feast_dot_serving_dot_ServingService__pb2.GetFeastServingTypeResponse.SerializeToString,
        ),
        "GetOnlineFeatures": grpc.unary_unary_rpc_method_handler(
            servicer.GetOnlineFeatures,
            request_deserializer=feast_dot_serving_dot_ServingService__pb2.GetFeaturesRequest.FromString,
            response_serializer=feast_dot_serving_dot_ServingService__pb2.GetOnlineFeaturesResponse.SerializeToString,
        ),
        "GetBatchFeatures": grpc.unary_unary_rpc_method_handler(
            servicer.GetBatchFeatures,
            request_deserializer=feast_dot_serving_dot_ServingService__pb2.GetFeaturesRequest.FromString,
            response_serializer=feast_dot_serving_dot_ServingService__pb2.GetBatchFeaturesResponse.SerializeToString,
        ),
        "ReloadJob": grpc.unary_unary_rpc_method_handler(
            servicer.ReloadJob,
            request_deserializer=feast_dot_serving_dot_ServingService__pb2.ReloadJobRequest.FromString,
            response_serializer=feast_dot_serving_dot_ServingService__pb2.ReloadJobResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "feast.serving.ServingService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))
