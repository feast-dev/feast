"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class FileFormat(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class ParquetFormat(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        def __init__(self,
            ) -> None: ...
    type___ParquetFormat = ParquetFormat


    @property
    def parquet_format(self) -> type___FileFormat.ParquetFormat: ...

    def __init__(self,
        *,
        parquet_format : typing___Optional[type___FileFormat.ParquetFormat] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"format",b"format",u"parquet_format",b"parquet_format"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"format",b"format",u"parquet_format",b"parquet_format"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"format",b"format"]) -> typing_extensions___Literal["parquet_format"]: ...
type___FileFormat = FileFormat

class StreamFormat(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class ProtoFormat(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        class_path: typing___Text = ...

        def __init__(self,
            *,
            class_path : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"class_path",b"class_path"]) -> None: ...
    type___ProtoFormat = ProtoFormat

    class AvroFormat(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        schema_json: typing___Text = ...

        def __init__(self,
            *,
            schema_json : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"schema_json",b"schema_json"]) -> None: ...
    type___AvroFormat = AvroFormat


    @property
    def avro_format(self) -> type___StreamFormat.AvroFormat: ...

    @property
    def proto_format(self) -> type___StreamFormat.ProtoFormat: ...

    def __init__(self,
        *,
        avro_format : typing___Optional[type___StreamFormat.AvroFormat] = None,
        proto_format : typing___Optional[type___StreamFormat.ProtoFormat] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"avro_format",b"avro_format",u"format",b"format",u"proto_format",b"proto_format"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"avro_format",b"avro_format",u"format",b"format",u"proto_format",b"proto_format"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"format",b"format"]) -> typing_extensions___Literal["avro_format","proto_format"]: ...
type___StreamFormat = StreamFormat
