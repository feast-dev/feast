// Code generated by protoc-gen-go. DO NOT EDIT.
// source: feast/core/CoreService.proto

package core

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ApplyFeatureSetResponse_Status int32

const (
	// Latest feature set version is consistent with provided feature set
	ApplyFeatureSetResponse_NO_CHANGE ApplyFeatureSetResponse_Status = 0
	// New feature set or feature set version created
	ApplyFeatureSetResponse_CREATED ApplyFeatureSetResponse_Status = 1
	// Error occurred while trying to apply changes
	ApplyFeatureSetResponse_ERROR ApplyFeatureSetResponse_Status = 2
)

var ApplyFeatureSetResponse_Status_name = map[int32]string{
	0: "NO_CHANGE",
	1: "CREATED",
	2: "ERROR",
}

var ApplyFeatureSetResponse_Status_value = map[string]int32{
	"NO_CHANGE": 0,
	"CREATED":   1,
	"ERROR":     2,
}

func (x ApplyFeatureSetResponse_Status) String() string {
	return proto.EnumName(ApplyFeatureSetResponse_Status_name, int32(x))
}

func (ApplyFeatureSetResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{7, 0}
}

type UpdateStoreResponse_Status int32

const (
	// Existing store config matching the given store id is identical to the given store config.
	UpdateStoreResponse_NO_CHANGE UpdateStoreResponse_Status = 0
	// New store created or existing config updated.
	UpdateStoreResponse_UPDATED UpdateStoreResponse_Status = 1
)

var UpdateStoreResponse_Status_name = map[int32]string{
	0: "NO_CHANGE",
	1: "UPDATED",
}

var UpdateStoreResponse_Status_value = map[string]int32{
	"NO_CHANGE": 0,
	"UPDATED":   1,
}

func (x UpdateStoreResponse_Status) String() string {
	return proto.EnumName(UpdateStoreResponse_Status_name, int32(x))
}

func (UpdateStoreResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{11, 0}
}

// Request for a single feature set
type GetFeatureSetRequest struct {
	// Name of project the feature set belongs to (required)
	Project string `protobuf:"bytes,3,opt,name=project,proto3" json:"project,omitempty"`
	// Name of feature set (required).
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Version of feature set (optional). If omitted then latest feature set will be returned.
	Version              int32    `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFeatureSetRequest) Reset()         { *m = GetFeatureSetRequest{} }
func (m *GetFeatureSetRequest) String() string { return proto.CompactTextString(m) }
func (*GetFeatureSetRequest) ProtoMessage()    {}
func (*GetFeatureSetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{0}
}

func (m *GetFeatureSetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFeatureSetRequest.Unmarshal(m, b)
}
func (m *GetFeatureSetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFeatureSetRequest.Marshal(b, m, deterministic)
}
func (m *GetFeatureSetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFeatureSetRequest.Merge(m, src)
}
func (m *GetFeatureSetRequest) XXX_Size() int {
	return xxx_messageInfo_GetFeatureSetRequest.Size(m)
}
func (m *GetFeatureSetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFeatureSetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFeatureSetRequest proto.InternalMessageInfo

func (m *GetFeatureSetRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *GetFeatureSetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetFeatureSetRequest) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

// Response containing a single feature set
type GetFeatureSetResponse struct {
	FeatureSet           *FeatureSet `protobuf:"bytes,1,opt,name=feature_set,json=featureSet,proto3" json:"feature_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetFeatureSetResponse) Reset()         { *m = GetFeatureSetResponse{} }
func (m *GetFeatureSetResponse) String() string { return proto.CompactTextString(m) }
func (*GetFeatureSetResponse) ProtoMessage()    {}
func (*GetFeatureSetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{1}
}

func (m *GetFeatureSetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFeatureSetResponse.Unmarshal(m, b)
}
func (m *GetFeatureSetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFeatureSetResponse.Marshal(b, m, deterministic)
}
func (m *GetFeatureSetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFeatureSetResponse.Merge(m, src)
}
func (m *GetFeatureSetResponse) XXX_Size() int {
	return xxx_messageInfo_GetFeatureSetResponse.Size(m)
}
func (m *GetFeatureSetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFeatureSetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetFeatureSetResponse proto.InternalMessageInfo

func (m *GetFeatureSetResponse) GetFeatureSet() *FeatureSet {
	if m != nil {
		return m.FeatureSet
	}
	return nil
}

// Retrieves details for all versions of a specific feature set
type ListFeatureSetsRequest struct {
	Filter               *ListFeatureSetsRequest_Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *ListFeatureSetsRequest) Reset()         { *m = ListFeatureSetsRequest{} }
func (m *ListFeatureSetsRequest) String() string { return proto.CompactTextString(m) }
func (*ListFeatureSetsRequest) ProtoMessage()    {}
func (*ListFeatureSetsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{2}
}

func (m *ListFeatureSetsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFeatureSetsRequest.Unmarshal(m, b)
}
func (m *ListFeatureSetsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFeatureSetsRequest.Marshal(b, m, deterministic)
}
func (m *ListFeatureSetsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFeatureSetsRequest.Merge(m, src)
}
func (m *ListFeatureSetsRequest) XXX_Size() int {
	return xxx_messageInfo_ListFeatureSetsRequest.Size(m)
}
func (m *ListFeatureSetsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFeatureSetsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListFeatureSetsRequest proto.InternalMessageInfo

func (m *ListFeatureSetsRequest) GetFilter() *ListFeatureSetsRequest_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

type ListFeatureSetsRequest_Filter struct {
	// Name of project that the feature sets belongs to. This can be one of
	// - [project_name]
	// - *
	// If an asterisk is provided, filtering on projects will be disabled. All projects will
	// be matched. It is NOT possible to provide an asterisk with a string in order to do
	// pattern matching.
	Project string `protobuf:"bytes,3,opt,name=project,proto3" json:"project,omitempty"`
	// Name of the desired feature set. Asterisks can be used as wildcards in the name.
	// Matching on names is only permitted if a specific project is defined. It is disallowed
	// If the project name is set to "*"
	// e.g.
	// - * can be used to match all feature sets
	// - my-feature-set* can be used to match all features prefixed by "my-feature-set"
	// - my-feature-set-6 can be used to select a single feature set
	FeatureSetName string `protobuf:"bytes,1,opt,name=feature_set_name,json=featureSetName,proto3" json:"feature_set_name,omitempty"`
	// Versions of the given feature sets that will be returned.
	// Valid options for version:
	//     "latest": only the latest version is returned.
	//     "*": Subscribe to all versions
	//     [version number]: pin to a specific version. Project and feature set name must be
	//                       explicitly defined if a specific version is pinned.
	FeatureSetVersion    string   `protobuf:"bytes,2,opt,name=feature_set_version,json=featureSetVersion,proto3" json:"feature_set_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListFeatureSetsRequest_Filter) Reset()         { *m = ListFeatureSetsRequest_Filter{} }
func (m *ListFeatureSetsRequest_Filter) String() string { return proto.CompactTextString(m) }
func (*ListFeatureSetsRequest_Filter) ProtoMessage()    {}
func (*ListFeatureSetsRequest_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{2, 0}
}

func (m *ListFeatureSetsRequest_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFeatureSetsRequest_Filter.Unmarshal(m, b)
}
func (m *ListFeatureSetsRequest_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFeatureSetsRequest_Filter.Marshal(b, m, deterministic)
}
func (m *ListFeatureSetsRequest_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFeatureSetsRequest_Filter.Merge(m, src)
}
func (m *ListFeatureSetsRequest_Filter) XXX_Size() int {
	return xxx_messageInfo_ListFeatureSetsRequest_Filter.Size(m)
}
func (m *ListFeatureSetsRequest_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFeatureSetsRequest_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_ListFeatureSetsRequest_Filter proto.InternalMessageInfo

func (m *ListFeatureSetsRequest_Filter) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *ListFeatureSetsRequest_Filter) GetFeatureSetName() string {
	if m != nil {
		return m.FeatureSetName
	}
	return ""
}

func (m *ListFeatureSetsRequest_Filter) GetFeatureSetVersion() string {
	if m != nil {
		return m.FeatureSetVersion
	}
	return ""
}

type ListFeatureSetsResponse struct {
	FeatureSets          []*FeatureSet `protobuf:"bytes,1,rep,name=feature_sets,json=featureSets,proto3" json:"feature_sets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListFeatureSetsResponse) Reset()         { *m = ListFeatureSetsResponse{} }
func (m *ListFeatureSetsResponse) String() string { return proto.CompactTextString(m) }
func (*ListFeatureSetsResponse) ProtoMessage()    {}
func (*ListFeatureSetsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{3}
}

func (m *ListFeatureSetsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFeatureSetsResponse.Unmarshal(m, b)
}
func (m *ListFeatureSetsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFeatureSetsResponse.Marshal(b, m, deterministic)
}
func (m *ListFeatureSetsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFeatureSetsResponse.Merge(m, src)
}
func (m *ListFeatureSetsResponse) XXX_Size() int {
	return xxx_messageInfo_ListFeatureSetsResponse.Size(m)
}
func (m *ListFeatureSetsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFeatureSetsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListFeatureSetsResponse proto.InternalMessageInfo

func (m *ListFeatureSetsResponse) GetFeatureSets() []*FeatureSet {
	if m != nil {
		return m.FeatureSets
	}
	return nil
}

type ListStoresRequest struct {
	Filter               *ListStoresRequest_Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ListStoresRequest) Reset()         { *m = ListStoresRequest{} }
func (m *ListStoresRequest) String() string { return proto.CompactTextString(m) }
func (*ListStoresRequest) ProtoMessage()    {}
func (*ListStoresRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{4}
}

func (m *ListStoresRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListStoresRequest.Unmarshal(m, b)
}
func (m *ListStoresRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListStoresRequest.Marshal(b, m, deterministic)
}
func (m *ListStoresRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListStoresRequest.Merge(m, src)
}
func (m *ListStoresRequest) XXX_Size() int {
	return xxx_messageInfo_ListStoresRequest.Size(m)
}
func (m *ListStoresRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListStoresRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListStoresRequest proto.InternalMessageInfo

func (m *ListStoresRequest) GetFilter() *ListStoresRequest_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

type ListStoresRequest_Filter struct {
	// Name of desired store. Regex is not supported in this query.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListStoresRequest_Filter) Reset()         { *m = ListStoresRequest_Filter{} }
func (m *ListStoresRequest_Filter) String() string { return proto.CompactTextString(m) }
func (*ListStoresRequest_Filter) ProtoMessage()    {}
func (*ListStoresRequest_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{4, 0}
}

func (m *ListStoresRequest_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListStoresRequest_Filter.Unmarshal(m, b)
}
func (m *ListStoresRequest_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListStoresRequest_Filter.Marshal(b, m, deterministic)
}
func (m *ListStoresRequest_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListStoresRequest_Filter.Merge(m, src)
}
func (m *ListStoresRequest_Filter) XXX_Size() int {
	return xxx_messageInfo_ListStoresRequest_Filter.Size(m)
}
func (m *ListStoresRequest_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_ListStoresRequest_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_ListStoresRequest_Filter proto.InternalMessageInfo

func (m *ListStoresRequest_Filter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ListStoresResponse struct {
	Store                []*Store `protobuf:"bytes,1,rep,name=store,proto3" json:"store,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListStoresResponse) Reset()         { *m = ListStoresResponse{} }
func (m *ListStoresResponse) String() string { return proto.CompactTextString(m) }
func (*ListStoresResponse) ProtoMessage()    {}
func (*ListStoresResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{5}
}

func (m *ListStoresResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListStoresResponse.Unmarshal(m, b)
}
func (m *ListStoresResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListStoresResponse.Marshal(b, m, deterministic)
}
func (m *ListStoresResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListStoresResponse.Merge(m, src)
}
func (m *ListStoresResponse) XXX_Size() int {
	return xxx_messageInfo_ListStoresResponse.Size(m)
}
func (m *ListStoresResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListStoresResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListStoresResponse proto.InternalMessageInfo

func (m *ListStoresResponse) GetStore() []*Store {
	if m != nil {
		return m.Store
	}
	return nil
}

type ApplyFeatureSetRequest struct {
	// Feature set version and source will be ignored
	FeatureSet           *FeatureSet `protobuf:"bytes,1,opt,name=feature_set,json=featureSet,proto3" json:"feature_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ApplyFeatureSetRequest) Reset()         { *m = ApplyFeatureSetRequest{} }
func (m *ApplyFeatureSetRequest) String() string { return proto.CompactTextString(m) }
func (*ApplyFeatureSetRequest) ProtoMessage()    {}
func (*ApplyFeatureSetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{6}
}

func (m *ApplyFeatureSetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyFeatureSetRequest.Unmarshal(m, b)
}
func (m *ApplyFeatureSetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyFeatureSetRequest.Marshal(b, m, deterministic)
}
func (m *ApplyFeatureSetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyFeatureSetRequest.Merge(m, src)
}
func (m *ApplyFeatureSetRequest) XXX_Size() int {
	return xxx_messageInfo_ApplyFeatureSetRequest.Size(m)
}
func (m *ApplyFeatureSetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyFeatureSetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyFeatureSetRequest proto.InternalMessageInfo

func (m *ApplyFeatureSetRequest) GetFeatureSet() *FeatureSet {
	if m != nil {
		return m.FeatureSet
	}
	return nil
}

type ApplyFeatureSetResponse struct {
	// Feature set response has been enriched with version and source information
	FeatureSet           *FeatureSet                    `protobuf:"bytes,1,opt,name=feature_set,json=featureSet,proto3" json:"feature_set,omitempty"`
	Status               ApplyFeatureSetResponse_Status `protobuf:"varint,2,opt,name=status,proto3,enum=feast.core.ApplyFeatureSetResponse_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *ApplyFeatureSetResponse) Reset()         { *m = ApplyFeatureSetResponse{} }
func (m *ApplyFeatureSetResponse) String() string { return proto.CompactTextString(m) }
func (*ApplyFeatureSetResponse) ProtoMessage()    {}
func (*ApplyFeatureSetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{7}
}

func (m *ApplyFeatureSetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyFeatureSetResponse.Unmarshal(m, b)
}
func (m *ApplyFeatureSetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyFeatureSetResponse.Marshal(b, m, deterministic)
}
func (m *ApplyFeatureSetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyFeatureSetResponse.Merge(m, src)
}
func (m *ApplyFeatureSetResponse) XXX_Size() int {
	return xxx_messageInfo_ApplyFeatureSetResponse.Size(m)
}
func (m *ApplyFeatureSetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyFeatureSetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyFeatureSetResponse proto.InternalMessageInfo

func (m *ApplyFeatureSetResponse) GetFeatureSet() *FeatureSet {
	if m != nil {
		return m.FeatureSet
	}
	return nil
}

func (m *ApplyFeatureSetResponse) GetStatus() ApplyFeatureSetResponse_Status {
	if m != nil {
		return m.Status
	}
	return ApplyFeatureSetResponse_NO_CHANGE
}

type GetFeastCoreVersionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFeastCoreVersionRequest) Reset()         { *m = GetFeastCoreVersionRequest{} }
func (m *GetFeastCoreVersionRequest) String() string { return proto.CompactTextString(m) }
func (*GetFeastCoreVersionRequest) ProtoMessage()    {}
func (*GetFeastCoreVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{8}
}

func (m *GetFeastCoreVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFeastCoreVersionRequest.Unmarshal(m, b)
}
func (m *GetFeastCoreVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFeastCoreVersionRequest.Marshal(b, m, deterministic)
}
func (m *GetFeastCoreVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFeastCoreVersionRequest.Merge(m, src)
}
func (m *GetFeastCoreVersionRequest) XXX_Size() int {
	return xxx_messageInfo_GetFeastCoreVersionRequest.Size(m)
}
func (m *GetFeastCoreVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFeastCoreVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFeastCoreVersionRequest proto.InternalMessageInfo

type GetFeastCoreVersionResponse struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFeastCoreVersionResponse) Reset()         { *m = GetFeastCoreVersionResponse{} }
func (m *GetFeastCoreVersionResponse) String() string { return proto.CompactTextString(m) }
func (*GetFeastCoreVersionResponse) ProtoMessage()    {}
func (*GetFeastCoreVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{9}
}

func (m *GetFeastCoreVersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFeastCoreVersionResponse.Unmarshal(m, b)
}
func (m *GetFeastCoreVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFeastCoreVersionResponse.Marshal(b, m, deterministic)
}
func (m *GetFeastCoreVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFeastCoreVersionResponse.Merge(m, src)
}
func (m *GetFeastCoreVersionResponse) XXX_Size() int {
	return xxx_messageInfo_GetFeastCoreVersionResponse.Size(m)
}
func (m *GetFeastCoreVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFeastCoreVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetFeastCoreVersionResponse proto.InternalMessageInfo

func (m *GetFeastCoreVersionResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type UpdateStoreRequest struct {
	Store                *Store   `protobuf:"bytes,1,opt,name=store,proto3" json:"store,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateStoreRequest) Reset()         { *m = UpdateStoreRequest{} }
func (m *UpdateStoreRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateStoreRequest) ProtoMessage()    {}
func (*UpdateStoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{10}
}

func (m *UpdateStoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateStoreRequest.Unmarshal(m, b)
}
func (m *UpdateStoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateStoreRequest.Marshal(b, m, deterministic)
}
func (m *UpdateStoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateStoreRequest.Merge(m, src)
}
func (m *UpdateStoreRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateStoreRequest.Size(m)
}
func (m *UpdateStoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateStoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateStoreRequest proto.InternalMessageInfo

func (m *UpdateStoreRequest) GetStore() *Store {
	if m != nil {
		return m.Store
	}
	return nil
}

type UpdateStoreResponse struct {
	Store                *Store                     `protobuf:"bytes,1,opt,name=store,proto3" json:"store,omitempty"`
	Status               UpdateStoreResponse_Status `protobuf:"varint,2,opt,name=status,proto3,enum=feast.core.UpdateStoreResponse_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *UpdateStoreResponse) Reset()         { *m = UpdateStoreResponse{} }
func (m *UpdateStoreResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateStoreResponse) ProtoMessage()    {}
func (*UpdateStoreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{11}
}

func (m *UpdateStoreResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateStoreResponse.Unmarshal(m, b)
}
func (m *UpdateStoreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateStoreResponse.Marshal(b, m, deterministic)
}
func (m *UpdateStoreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateStoreResponse.Merge(m, src)
}
func (m *UpdateStoreResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateStoreResponse.Size(m)
}
func (m *UpdateStoreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateStoreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateStoreResponse proto.InternalMessageInfo

func (m *UpdateStoreResponse) GetStore() *Store {
	if m != nil {
		return m.Store
	}
	return nil
}

func (m *UpdateStoreResponse) GetStatus() UpdateStoreResponse_Status {
	if m != nil {
		return m.Status
	}
	return UpdateStoreResponse_NO_CHANGE
}

// Request to create a project
type CreateProjectRequest struct {
	// Name of project (required)
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateProjectRequest) Reset()         { *m = CreateProjectRequest{} }
func (m *CreateProjectRequest) String() string { return proto.CompactTextString(m) }
func (*CreateProjectRequest) ProtoMessage()    {}
func (*CreateProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{12}
}

func (m *CreateProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateProjectRequest.Unmarshal(m, b)
}
func (m *CreateProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateProjectRequest.Marshal(b, m, deterministic)
}
func (m *CreateProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateProjectRequest.Merge(m, src)
}
func (m *CreateProjectRequest) XXX_Size() int {
	return xxx_messageInfo_CreateProjectRequest.Size(m)
}
func (m *CreateProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateProjectRequest proto.InternalMessageInfo

func (m *CreateProjectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Response for creation of a project
type CreateProjectResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateProjectResponse) Reset()         { *m = CreateProjectResponse{} }
func (m *CreateProjectResponse) String() string { return proto.CompactTextString(m) }
func (*CreateProjectResponse) ProtoMessage()    {}
func (*CreateProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{13}
}

func (m *CreateProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateProjectResponse.Unmarshal(m, b)
}
func (m *CreateProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateProjectResponse.Marshal(b, m, deterministic)
}
func (m *CreateProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateProjectResponse.Merge(m, src)
}
func (m *CreateProjectResponse) XXX_Size() int {
	return xxx_messageInfo_CreateProjectResponse.Size(m)
}
func (m *CreateProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateProjectResponse proto.InternalMessageInfo

// Request for the archival of a project
type ArchiveProjectRequest struct {
	// Name of project to be archived
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArchiveProjectRequest) Reset()         { *m = ArchiveProjectRequest{} }
func (m *ArchiveProjectRequest) String() string { return proto.CompactTextString(m) }
func (*ArchiveProjectRequest) ProtoMessage()    {}
func (*ArchiveProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{14}
}

func (m *ArchiveProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArchiveProjectRequest.Unmarshal(m, b)
}
func (m *ArchiveProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArchiveProjectRequest.Marshal(b, m, deterministic)
}
func (m *ArchiveProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchiveProjectRequest.Merge(m, src)
}
func (m *ArchiveProjectRequest) XXX_Size() int {
	return xxx_messageInfo_ArchiveProjectRequest.Size(m)
}
func (m *ArchiveProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchiveProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ArchiveProjectRequest proto.InternalMessageInfo

func (m *ArchiveProjectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Response for archival of a project
type ArchiveProjectResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArchiveProjectResponse) Reset()         { *m = ArchiveProjectResponse{} }
func (m *ArchiveProjectResponse) String() string { return proto.CompactTextString(m) }
func (*ArchiveProjectResponse) ProtoMessage()    {}
func (*ArchiveProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{15}
}

func (m *ArchiveProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArchiveProjectResponse.Unmarshal(m, b)
}
func (m *ArchiveProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArchiveProjectResponse.Marshal(b, m, deterministic)
}
func (m *ArchiveProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchiveProjectResponse.Merge(m, src)
}
func (m *ArchiveProjectResponse) XXX_Size() int {
	return xxx_messageInfo_ArchiveProjectResponse.Size(m)
}
func (m *ArchiveProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchiveProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ArchiveProjectResponse proto.InternalMessageInfo

// Request for listing of projects
type ListProjectsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListProjectsRequest) Reset()         { *m = ListProjectsRequest{} }
func (m *ListProjectsRequest) String() string { return proto.CompactTextString(m) }
func (*ListProjectsRequest) ProtoMessage()    {}
func (*ListProjectsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{16}
}

func (m *ListProjectsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectsRequest.Unmarshal(m, b)
}
func (m *ListProjectsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectsRequest.Marshal(b, m, deterministic)
}
func (m *ListProjectsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectsRequest.Merge(m, src)
}
func (m *ListProjectsRequest) XXX_Size() int {
	return xxx_messageInfo_ListProjectsRequest.Size(m)
}
func (m *ListProjectsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectsRequest proto.InternalMessageInfo

// Response for listing of projects
type ListProjectsResponse struct {
	// List of project names (archived projects are filtered out)
	Projects             []string `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListProjectsResponse) Reset()         { *m = ListProjectsResponse{} }
func (m *ListProjectsResponse) String() string { return proto.CompactTextString(m) }
func (*ListProjectsResponse) ProtoMessage()    {}
func (*ListProjectsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9be266444105411, []int{17}
}

func (m *ListProjectsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectsResponse.Unmarshal(m, b)
}
func (m *ListProjectsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectsResponse.Marshal(b, m, deterministic)
}
func (m *ListProjectsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectsResponse.Merge(m, src)
}
func (m *ListProjectsResponse) XXX_Size() int {
	return xxx_messageInfo_ListProjectsResponse.Size(m)
}
func (m *ListProjectsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectsResponse proto.InternalMessageInfo

func (m *ListProjectsResponse) GetProjects() []string {
	if m != nil {
		return m.Projects
	}
	return nil
}

func init() {
	proto.RegisterEnum("feast.core.ApplyFeatureSetResponse_Status", ApplyFeatureSetResponse_Status_name, ApplyFeatureSetResponse_Status_value)
	proto.RegisterEnum("feast.core.UpdateStoreResponse_Status", UpdateStoreResponse_Status_name, UpdateStoreResponse_Status_value)
	proto.RegisterType((*GetFeatureSetRequest)(nil), "feast.core.GetFeatureSetRequest")
	proto.RegisterType((*GetFeatureSetResponse)(nil), "feast.core.GetFeatureSetResponse")
	proto.RegisterType((*ListFeatureSetsRequest)(nil), "feast.core.ListFeatureSetsRequest")
	proto.RegisterType((*ListFeatureSetsRequest_Filter)(nil), "feast.core.ListFeatureSetsRequest.Filter")
	proto.RegisterType((*ListFeatureSetsResponse)(nil), "feast.core.ListFeatureSetsResponse")
	proto.RegisterType((*ListStoresRequest)(nil), "feast.core.ListStoresRequest")
	proto.RegisterType((*ListStoresRequest_Filter)(nil), "feast.core.ListStoresRequest.Filter")
	proto.RegisterType((*ListStoresResponse)(nil), "feast.core.ListStoresResponse")
	proto.RegisterType((*ApplyFeatureSetRequest)(nil), "feast.core.ApplyFeatureSetRequest")
	proto.RegisterType((*ApplyFeatureSetResponse)(nil), "feast.core.ApplyFeatureSetResponse")
	proto.RegisterType((*GetFeastCoreVersionRequest)(nil), "feast.core.GetFeastCoreVersionRequest")
	proto.RegisterType((*GetFeastCoreVersionResponse)(nil), "feast.core.GetFeastCoreVersionResponse")
	proto.RegisterType((*UpdateStoreRequest)(nil), "feast.core.UpdateStoreRequest")
	proto.RegisterType((*UpdateStoreResponse)(nil), "feast.core.UpdateStoreResponse")
	proto.RegisterType((*CreateProjectRequest)(nil), "feast.core.CreateProjectRequest")
	proto.RegisterType((*CreateProjectResponse)(nil), "feast.core.CreateProjectResponse")
	proto.RegisterType((*ArchiveProjectRequest)(nil), "feast.core.ArchiveProjectRequest")
	proto.RegisterType((*ArchiveProjectResponse)(nil), "feast.core.ArchiveProjectResponse")
	proto.RegisterType((*ListProjectsRequest)(nil), "feast.core.ListProjectsRequest")
	proto.RegisterType((*ListProjectsResponse)(nil), "feast.core.ListProjectsResponse")
}

func init() { proto.RegisterFile("feast/core/CoreService.proto", fileDescriptor_d9be266444105411) }

var fileDescriptor_d9be266444105411 = []byte{
	// 762 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xef, 0x4e, 0x13, 0x4f,
	0x14, 0xfd, 0x2d, 0xfc, 0x28, 0xf6, 0x16, 0xb0, 0x4c, 0x69, 0x69, 0x16, 0x84, 0x3a, 0x12, 0x41,
	0x4c, 0x76, 0x93, 0xfa, 0x81, 0x98, 0x88, 0x49, 0x29, 0x05, 0x13, 0x4d, 0x29, 0x0b, 0x68, 0xc2,
	0x07, 0x49, 0x29, 0x53, 0x28, 0xff, 0xa6, 0xee, 0x4c, 0x49, 0x4c, 0x7c, 0x1a, 0xe3, 0xbb, 0xf8,
	0x0c, 0xbe, 0x8d, 0xd9, 0x9d, 0x69, 0x77, 0x66, 0xba, 0xdd, 0x1a, 0xfd, 0xd6, 0xbd, 0x73, 0xee,
	0xd9, 0xbb, 0xe7, 0xde, 0x73, 0x3b, 0xb0, 0xdc, 0x26, 0x4d, 0xc6, 0xdd, 0x16, 0xf5, 0x89, 0x5b,
	0xa5, 0x3e, 0x39, 0x22, 0xfe, 0x43, 0xa7, 0x45, 0x9c, 0xae, 0x4f, 0x39, 0x45, 0x10, 0x9e, 0x3a,
	0xc1, 0xa9, 0xbd, 0xa4, 0x20, 0xf7, 0x48, 0x93, 0xf7, 0x02, 0x30, 0x17, 0x40, 0xbb, 0xa0, 0x1c,
	0x1e, 0x71, 0xea, 0x4b, 0x02, 0xfc, 0x19, 0x16, 0xf6, 0x09, 0x8f, 0xe0, 0x1e, 0xf9, 0xd2, 0x23,
	0x8c, 0xa3, 0x22, 0x4c, 0x77, 0x7d, 0x7a, 0x4d, 0x5a, 0xbc, 0x38, 0x59, 0xb2, 0x36, 0xd2, 0x5e,
	0xff, 0x11, 0x21, 0xf8, 0xff, 0xbe, 0x79, 0x47, 0x8a, 0x56, 0x18, 0x0e, 0x7f, 0x07, 0xe8, 0x07,
	0xe2, 0xb3, 0x0e, 0xbd, 0x2f, 0x4e, 0x94, 0xac, 0x8d, 0x29, 0xaf, 0xff, 0x88, 0x1b, 0x90, 0x37,
	0xf8, 0x59, 0x97, 0xde, 0x33, 0x82, 0xb6, 0x20, 0xd3, 0x16, 0xd1, 0x33, 0x46, 0x78, 0xc8, 0x96,
	0x29, 0x17, 0x9c, 0xe8, 0x7b, 0x1c, 0x25, 0x09, 0xda, 0x83, 0xdf, 0xf8, 0x97, 0x05, 0x85, 0x0f,
	0x1d, 0xa6, 0x70, 0xb2, 0x7e, 0xd1, 0x15, 0x48, 0xb5, 0x3b, 0xb7, 0x9c, 0xf8, 0x92, 0xee, 0x85,
	0x4a, 0x17, 0x9f, 0xe3, 0xec, 0x85, 0x09, 0x9e, 0x4c, 0xb4, 0xbf, 0x41, 0x4a, 0x44, 0x12, 0x14,
	0xd8, 0x80, 0xac, 0x52, 0xfa, 0x99, 0xa2, 0xc6, 0x5c, 0x54, 0x67, 0x3d, 0xd0, 0xc5, 0x81, 0x9c,
	0x8a, 0x54, 0x35, 0x4a, 0x7b, 0xf3, 0x11, 0xf8, 0xa3, 0x54, 0xeb, 0x18, 0x16, 0x87, 0xca, 0x94,
	0x7a, 0xbd, 0x86, 0x19, 0x85, 0x8a, 0x15, 0xad, 0xd2, 0x64, 0x82, 0x60, 0x99, 0x88, 0x9b, 0x61,
	0x0a, 0xf3, 0x01, 0x6b, 0xd8, 0xf6, 0x81, 0x56, 0x6f, 0x0c, 0xad, 0xd6, 0x4c, 0xad, 0x34, 0xb8,
	0x29, 0xd3, 0xf2, 0x40, 0xa6, 0x98, 0x71, 0xc0, 0xdb, 0x80, 0x54, 0x06, 0xf9, 0x05, 0xeb, 0x30,
	0xc5, 0x82, 0x88, 0x2c, 0x7d, 0x5e, 0x7d, 0x61, 0x08, 0xf5, 0xc4, 0x39, 0x3e, 0x84, 0x42, 0xa5,
	0xdb, 0xbd, 0xfd, 0x3a, 0x3c, 0x95, 0x7f, 0x3d, 0x34, 0x3f, 0x2d, 0x58, 0x1c, 0xe2, 0xfc, 0xc7,
	0x49, 0x44, 0x3b, 0x90, 0x62, 0xbc, 0xc9, 0x7b, 0x2c, 0x6c, 0xe8, 0x5c, 0x79, 0x53, 0xcd, 0x19,
	0xf1, 0x36, 0xe7, 0x28, 0xcc, 0xf0, 0x64, 0x26, 0x76, 0x21, 0x25, 0x22, 0x68, 0x16, 0xd2, 0xf5,
	0x83, 0xb3, 0xea, 0xbb, 0x4a, 0x7d, 0xbf, 0x96, 0xfd, 0x0f, 0x65, 0x60, 0xba, 0xea, 0xd5, 0x2a,
	0xc7, 0xb5, 0xdd, 0xac, 0x85, 0xd2, 0x30, 0x55, 0xf3, 0xbc, 0x03, 0x2f, 0x3b, 0x81, 0x97, 0xc1,
	0x16, 0x86, 0x62, 0x3c, 0x58, 0x07, 0x72, 0x72, 0xa4, 0x40, 0x78, 0x0b, 0x96, 0x62, 0x4f, 0xe5,
	0xa7, 0x2a, 0x3e, 0x15, 0xfd, 0x1a, 0xf8, 0x74, 0x1b, 0xd0, 0x49, 0xf7, 0xa2, 0xc9, 0x89, 0xe8,
	0x84, 0xd4, 0x5b, 0x69, 0x99, 0x95, 0xd8, 0xb2, 0x1f, 0x16, 0xe4, 0xb4, 0xfc, 0xe1, 0x9e, 0x27,
	0x12, 0xa0, 0xb7, 0x86, 0x96, 0xcf, 0x55, 0x64, 0x0c, 0xb3, 0xa9, 0xe3, 0x5a, 0x82, 0x8e, 0x27,
	0x8d, 0x5d, 0xa1, 0x23, 0xde, 0x84, 0x85, 0xaa, 0x4f, 0x9a, 0x9c, 0x34, 0x84, 0x95, 0xfb, 0xdf,
	0x19, 0x37, 0xc4, 0x8b, 0x90, 0x37, 0xb0, 0xe2, 0xcd, 0xf8, 0x25, 0xe4, 0x2b, 0x7e, 0xeb, 0xaa,
	0xf3, 0xf0, 0x27, 0x2c, 0x45, 0x28, 0x98, 0x60, 0x49, 0x93, 0x87, 0x5c, 0x60, 0x12, 0x19, 0xee,
	0x1b, 0x0d, 0x97, 0x61, 0x41, 0x0f, 0x4b, 0x25, 0x6d, 0x78, 0x24, 0xf7, 0x8f, 0xf0, 0x7e, 0xda,
	0x1b, 0x3c, 0x97, 0xbf, 0xa7, 0x20, 0xa3, 0xfc, 0x37, 0xa0, 0x36, 0xe4, 0x62, 0xa6, 0x00, 0x69,
	0x9a, 0x8e, 0x1e, 0x22, 0x7b, 0x7d, 0x2c, 0x4e, 0xd6, 0x74, 0x0c, 0xb3, 0xda, 0x72, 0x47, 0xa5,
	0xe1, 0x4c, 0xdd, 0xc1, 0xf6, 0xd3, 0x04, 0x84, 0x64, 0x3d, 0x85, 0xc7, 0xc6, 0x12, 0x44, 0x78,
	0xfc, 0x22, 0xb7, 0x9f, 0x25, 0x62, 0x24, 0xf7, 0x7b, 0x80, 0x68, 0x33, 0xa1, 0x27, 0x89, 0x3b,
	0xcf, 0x5e, 0x19, 0x75, 0x1c, 0x15, 0x6a, 0xb8, 0x5c, 0x2f, 0x34, 0x7e, 0x89, 0xe9, 0x85, 0x8e,
	0x5a, 0x4a, 0x75, 0xc8, 0x28, 0x53, 0x8f, 0x56, 0x46, 0xda, 0x41, 0x70, 0xae, 0x8e, 0xb1, 0x4b,
	0xd0, 0x2a, 0x6d, 0x9a, 0xf5, 0x56, 0xc5, 0x99, 0x42, 0x6f, 0x55, 0xac, 0x15, 0xd0, 0x27, 0x98,
	0xd3, 0xa7, 0x1b, 0x69, 0x49, 0xb1, 0x36, 0xb1, 0x71, 0x12, 0x44, 0x12, 0x1f, 0xc2, 0x8c, 0xea,
	0x02, 0xb4, 0x6a, 0xb6, 0xc2, 0xb0, 0x8d, 0x5d, 0x1a, 0x0d, 0x10, 0x94, 0x3b, 0x07, 0xa0, 0x5c,
	0x96, 0x76, 0xb2, 0x8a, 0x5f, 0x1a, 0xc1, 0x4d, 0xe8, 0xd4, 0xbd, 0xec, 0xf0, 0xab, 0xde, 0xb9,
	0xd3, 0xa2, 0x77, 0xee, 0x25, 0xbd, 0x26, 0x37, 0xae, 0xb8, 0x32, 0xb1, 0x8b, 0x1b, 0xf7, 0x92,
	0xba, 0xe1, 0x75, 0x89, 0xb9, 0xd1, 0x35, 0xea, 0x3c, 0x15, 0x86, 0x5e, 0xfd, 0x0e, 0x00, 0x00,
	0xff, 0xff, 0xe2, 0x7d, 0x9e, 0xca, 0xa2, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CoreServiceClient is the client API for CoreService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CoreServiceClient interface {
	// Retrieve version information about this Feast deployment
	GetFeastCoreVersion(ctx context.Context, in *GetFeastCoreVersionRequest, opts ...grpc.CallOption) (*GetFeastCoreVersionResponse, error)
	// Returns a specific feature set
	GetFeatureSet(ctx context.Context, in *GetFeatureSetRequest, opts ...grpc.CallOption) (*GetFeatureSetResponse, error)
	// Retrieve feature set details given a filter.
	//
	// Returns all feature sets matching that filter. If none are found,
	// an empty list will be returned.
	// If no filter is provided in the request, the response will contain all the feature
	// sets currently stored in the registry.
	ListFeatureSets(ctx context.Context, in *ListFeatureSetsRequest, opts ...grpc.CallOption) (*ListFeatureSetsResponse, error)
	// Retrieve store details given a filter.
	//
	// Returns all stores matching that filter. If none are found, an empty list will be returned.
	// If no filter is provided in the request, the response will contain all the stores currently
	// stored in the registry.
	ListStores(ctx context.Context, in *ListStoresRequest, opts ...grpc.CallOption) (*ListStoresResponse, error)
	// Create or update and existing feature set.
	//
	// This function is idempotent - it will not create a new feature set if schema does not change.
	// If an existing feature set is updated, core will advance the version number, which will be
	// returned in response.
	ApplyFeatureSet(ctx context.Context, in *ApplyFeatureSetRequest, opts ...grpc.CallOption) (*ApplyFeatureSetResponse, error)
	// Updates core with the configuration of the store.
	//
	// If the changes are valid, core will return the given store configuration in response, and
	// start or update the necessary feature population jobs for the updated store.
	UpdateStore(ctx context.Context, in *UpdateStoreRequest, opts ...grpc.CallOption) (*UpdateStoreResponse, error)
	// Creates a project. Projects serve as namespaces within which resources like features will be
	// created. Both feature set names as well as field names must be unique within a project. Project
	// names themselves must be globally unique.
	CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*CreateProjectResponse, error)
	// Archives a project. Archived projects will continue to exist and function, but won't be visible
	// through the Core API. Any existing ingestion or serving requests will continue to function,
	// but will result in warning messages being logged. It is not possible to unarchive a project
	// through the Core API
	ArchiveProject(ctx context.Context, in *ArchiveProjectRequest, opts ...grpc.CallOption) (*ArchiveProjectResponse, error)
	// Lists all projects active projects.
	ListProjects(ctx context.Context, in *ListProjectsRequest, opts ...grpc.CallOption) (*ListProjectsResponse, error)
}

type coreServiceClient struct {
	cc *grpc.ClientConn
}

func NewCoreServiceClient(cc *grpc.ClientConn) CoreServiceClient {
	return &coreServiceClient{cc}
}

func (c *coreServiceClient) GetFeastCoreVersion(ctx context.Context, in *GetFeastCoreVersionRequest, opts ...grpc.CallOption) (*GetFeastCoreVersionResponse, error) {
	out := new(GetFeastCoreVersionResponse)
	err := c.cc.Invoke(ctx, "/feast.core.CoreService/GetFeastCoreVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreServiceClient) GetFeatureSet(ctx context.Context, in *GetFeatureSetRequest, opts ...grpc.CallOption) (*GetFeatureSetResponse, error) {
	out := new(GetFeatureSetResponse)
	err := c.cc.Invoke(ctx, "/feast.core.CoreService/GetFeatureSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreServiceClient) ListFeatureSets(ctx context.Context, in *ListFeatureSetsRequest, opts ...grpc.CallOption) (*ListFeatureSetsResponse, error) {
	out := new(ListFeatureSetsResponse)
	err := c.cc.Invoke(ctx, "/feast.core.CoreService/ListFeatureSets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreServiceClient) ListStores(ctx context.Context, in *ListStoresRequest, opts ...grpc.CallOption) (*ListStoresResponse, error) {
	out := new(ListStoresResponse)
	err := c.cc.Invoke(ctx, "/feast.core.CoreService/ListStores", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreServiceClient) ApplyFeatureSet(ctx context.Context, in *ApplyFeatureSetRequest, opts ...grpc.CallOption) (*ApplyFeatureSetResponse, error) {
	out := new(ApplyFeatureSetResponse)
	err := c.cc.Invoke(ctx, "/feast.core.CoreService/ApplyFeatureSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreServiceClient) UpdateStore(ctx context.Context, in *UpdateStoreRequest, opts ...grpc.CallOption) (*UpdateStoreResponse, error) {
	out := new(UpdateStoreResponse)
	err := c.cc.Invoke(ctx, "/feast.core.CoreService/UpdateStore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreServiceClient) CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*CreateProjectResponse, error) {
	out := new(CreateProjectResponse)
	err := c.cc.Invoke(ctx, "/feast.core.CoreService/CreateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreServiceClient) ArchiveProject(ctx context.Context, in *ArchiveProjectRequest, opts ...grpc.CallOption) (*ArchiveProjectResponse, error) {
	out := new(ArchiveProjectResponse)
	err := c.cc.Invoke(ctx, "/feast.core.CoreService/ArchiveProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreServiceClient) ListProjects(ctx context.Context, in *ListProjectsRequest, opts ...grpc.CallOption) (*ListProjectsResponse, error) {
	out := new(ListProjectsResponse)
	err := c.cc.Invoke(ctx, "/feast.core.CoreService/ListProjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CoreServiceServer is the server API for CoreService service.
type CoreServiceServer interface {
	// Retrieve version information about this Feast deployment
	GetFeastCoreVersion(context.Context, *GetFeastCoreVersionRequest) (*GetFeastCoreVersionResponse, error)
	// Returns a specific feature set
	GetFeatureSet(context.Context, *GetFeatureSetRequest) (*GetFeatureSetResponse, error)
	// Retrieve feature set details given a filter.
	//
	// Returns all feature sets matching that filter. If none are found,
	// an empty list will be returned.
	// If no filter is provided in the request, the response will contain all the feature
	// sets currently stored in the registry.
	ListFeatureSets(context.Context, *ListFeatureSetsRequest) (*ListFeatureSetsResponse, error)
	// Retrieve store details given a filter.
	//
	// Returns all stores matching that filter. If none are found, an empty list will be returned.
	// If no filter is provided in the request, the response will contain all the stores currently
	// stored in the registry.
	ListStores(context.Context, *ListStoresRequest) (*ListStoresResponse, error)
	// Create or update and existing feature set.
	//
	// This function is idempotent - it will not create a new feature set if schema does not change.
	// If an existing feature set is updated, core will advance the version number, which will be
	// returned in response.
	ApplyFeatureSet(context.Context, *ApplyFeatureSetRequest) (*ApplyFeatureSetResponse, error)
	// Updates core with the configuration of the store.
	//
	// If the changes are valid, core will return the given store configuration in response, and
	// start or update the necessary feature population jobs for the updated store.
	UpdateStore(context.Context, *UpdateStoreRequest) (*UpdateStoreResponse, error)
	// Creates a project. Projects serve as namespaces within which resources like features will be
	// created. Both feature set names as well as field names must be unique within a project. Project
	// names themselves must be globally unique.
	CreateProject(context.Context, *CreateProjectRequest) (*CreateProjectResponse, error)
	// Archives a project. Archived projects will continue to exist and function, but won't be visible
	// through the Core API. Any existing ingestion or serving requests will continue to function,
	// but will result in warning messages being logged. It is not possible to unarchive a project
	// through the Core API
	ArchiveProject(context.Context, *ArchiveProjectRequest) (*ArchiveProjectResponse, error)
	// Lists all projects active projects.
	ListProjects(context.Context, *ListProjectsRequest) (*ListProjectsResponse, error)
}

// UnimplementedCoreServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCoreServiceServer struct {
}

func (*UnimplementedCoreServiceServer) GetFeastCoreVersion(ctx context.Context, req *GetFeastCoreVersionRequest) (*GetFeastCoreVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFeastCoreVersion not implemented")
}
func (*UnimplementedCoreServiceServer) GetFeatureSet(ctx context.Context, req *GetFeatureSetRequest) (*GetFeatureSetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFeatureSet not implemented")
}
func (*UnimplementedCoreServiceServer) ListFeatureSets(ctx context.Context, req *ListFeatureSetsRequest) (*ListFeatureSetsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFeatureSets not implemented")
}
func (*UnimplementedCoreServiceServer) ListStores(ctx context.Context, req *ListStoresRequest) (*ListStoresResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListStores not implemented")
}
func (*UnimplementedCoreServiceServer) ApplyFeatureSet(ctx context.Context, req *ApplyFeatureSetRequest) (*ApplyFeatureSetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApplyFeatureSet not implemented")
}
func (*UnimplementedCoreServiceServer) UpdateStore(ctx context.Context, req *UpdateStoreRequest) (*UpdateStoreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStore not implemented")
}
func (*UnimplementedCoreServiceServer) CreateProject(ctx context.Context, req *CreateProjectRequest) (*CreateProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProject not implemented")
}
func (*UnimplementedCoreServiceServer) ArchiveProject(ctx context.Context, req *ArchiveProjectRequest) (*ArchiveProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveProject not implemented")
}
func (*UnimplementedCoreServiceServer) ListProjects(ctx context.Context, req *ListProjectsRequest) (*ListProjectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListProjects not implemented")
}

func RegisterCoreServiceServer(s *grpc.Server, srv CoreServiceServer) {
	s.RegisterService(&_CoreService_serviceDesc, srv)
}

func _CoreService_GetFeastCoreVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFeastCoreVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServiceServer).GetFeastCoreVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feast.core.CoreService/GetFeastCoreVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServiceServer).GetFeastCoreVersion(ctx, req.(*GetFeastCoreVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreService_GetFeatureSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFeatureSetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServiceServer).GetFeatureSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feast.core.CoreService/GetFeatureSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServiceServer).GetFeatureSet(ctx, req.(*GetFeatureSetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreService_ListFeatureSets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFeatureSetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServiceServer).ListFeatureSets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feast.core.CoreService/ListFeatureSets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServiceServer).ListFeatureSets(ctx, req.(*ListFeatureSetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreService_ListStores_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStoresRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServiceServer).ListStores(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feast.core.CoreService/ListStores",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServiceServer).ListStores(ctx, req.(*ListStoresRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreService_ApplyFeatureSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyFeatureSetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServiceServer).ApplyFeatureSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feast.core.CoreService/ApplyFeatureSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServiceServer).ApplyFeatureSet(ctx, req.(*ApplyFeatureSetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreService_UpdateStore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServiceServer).UpdateStore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feast.core.CoreService/UpdateStore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServiceServer).UpdateStore(ctx, req.(*UpdateStoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreService_CreateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServiceServer).CreateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feast.core.CoreService/CreateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServiceServer).CreateProject(ctx, req.(*CreateProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreService_ArchiveProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArchiveProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServiceServer).ArchiveProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feast.core.CoreService/ArchiveProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServiceServer).ArchiveProject(ctx, req.(*ArchiveProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreService_ListProjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProjectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServiceServer).ListProjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feast.core.CoreService/ListProjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServiceServer).ListProjects(ctx, req.(*ListProjectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CoreService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "feast.core.CoreService",
	HandlerType: (*CoreServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFeastCoreVersion",
			Handler:    _CoreService_GetFeastCoreVersion_Handler,
		},
		{
			MethodName: "GetFeatureSet",
			Handler:    _CoreService_GetFeatureSet_Handler,
		},
		{
			MethodName: "ListFeatureSets",
			Handler:    _CoreService_ListFeatureSets_Handler,
		},
		{
			MethodName: "ListStores",
			Handler:    _CoreService_ListStores_Handler,
		},
		{
			MethodName: "ApplyFeatureSet",
			Handler:    _CoreService_ApplyFeatureSet_Handler,
		},
		{
			MethodName: "UpdateStore",
			Handler:    _CoreService_UpdateStore_Handler,
		},
		{
			MethodName: "CreateProject",
			Handler:    _CoreService_CreateProject_Handler,
		},
		{
			MethodName: "ArchiveProject",
			Handler:    _CoreService_ArchiveProject_Handler,
		},
		{
			MethodName: "ListProjects",
			Handler:    _CoreService_ListProjects_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "feast/core/CoreService.proto",
}
