//
// Copyright 2020 The Feast Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.10.0
// source: feast/core/IngestionJob.proto

package core

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Status of a Feast Ingestion Job
type IngestionJobStatus int32

const (
	// Job status is not known.
	IngestionJobStatus_UNKNOWN IngestionJobStatus = 0
	// Import job is submitted to runner and currently pending for executing
	IngestionJobStatus_PENDING IngestionJobStatus = 1
	// Import job is currently running in the runner
	IngestionJobStatus_RUNNING IngestionJobStatus = 2
	// Runner's reported the import job has completed (applicable to batch job)
	IngestionJobStatus_COMPLETED IngestionJobStatus = 3
	// When user sent abort command, but it's still running
	IngestionJobStatus_ABORTING IngestionJobStatus = 4
	// User initiated abort job
	IngestionJobStatus_ABORTED IngestionJobStatus = 5
	// Runner's reported that the import job failed to run or there is a failure during job
	IngestionJobStatus_ERROR IngestionJobStatus = 6
	// job has been suspended and waiting for cleanup
	IngestionJobStatus_SUSPENDING IngestionJobStatus = 7
	// job has been suspended
	IngestionJobStatus_SUSPENDED IngestionJobStatus = 8
)

// Enum value maps for IngestionJobStatus.
var (
	IngestionJobStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "PENDING",
		2: "RUNNING",
		3: "COMPLETED",
		4: "ABORTING",
		5: "ABORTED",
		6: "ERROR",
		7: "SUSPENDING",
		8: "SUSPENDED",
	}
	IngestionJobStatus_value = map[string]int32{
		"UNKNOWN":    0,
		"PENDING":    1,
		"RUNNING":    2,
		"COMPLETED":  3,
		"ABORTING":   4,
		"ABORTED":    5,
		"ERROR":      6,
		"SUSPENDING": 7,
		"SUSPENDED":  8,
	}
)

func (x IngestionJobStatus) Enum() *IngestionJobStatus {
	p := new(IngestionJobStatus)
	*p = x
	return p
}

func (x IngestionJobStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IngestionJobStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_feast_core_IngestionJob_proto_enumTypes[0].Descriptor()
}

func (IngestionJobStatus) Type() protoreflect.EnumType {
	return &file_feast_core_IngestionJob_proto_enumTypes[0]
}

func (x IngestionJobStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IngestionJobStatus.Descriptor instead.
func (IngestionJobStatus) EnumDescriptor() ([]byte, []int) {
	return file_feast_core_IngestionJob_proto_rawDescGZIP(), []int{0}
}

// Represents Feast Injestion Job
type IngestionJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Job ID assigned by Feast
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// External job ID specific to the runner.
	// For DirectRunner jobs, this is identical to id. For DataflowRunner jobs, this refers to the Dataflow job ID.
	ExternalId string             `protobuf:"bytes,2,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Status     IngestionJobStatus `protobuf:"varint,3,opt,name=status,proto3,enum=feast.core.IngestionJobStatus" json:"status,omitempty"`
	// List of feature sets whose features are populated by this job.
	FeatureSets []*FeatureSet `protobuf:"bytes,4,rep,name=feature_sets,json=featureSets,proto3" json:"feature_sets,omitempty"`
	// Source this job is reading from.
	Source *Source `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
	// Store this job is writing to.
	Store *Store `protobuf:"bytes,6,opt,name=store,proto3" json:"store,omitempty"`
}

func (x *IngestionJob) Reset() {
	*x = IngestionJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feast_core_IngestionJob_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngestionJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestionJob) ProtoMessage() {}

func (x *IngestionJob) ProtoReflect() protoreflect.Message {
	mi := &file_feast_core_IngestionJob_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestionJob.ProtoReflect.Descriptor instead.
func (*IngestionJob) Descriptor() ([]byte, []int) {
	return file_feast_core_IngestionJob_proto_rawDescGZIP(), []int{0}
}

func (x *IngestionJob) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *IngestionJob) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *IngestionJob) GetStatus() IngestionJobStatus {
	if x != nil {
		return x.Status
	}
	return IngestionJobStatus_UNKNOWN
}

func (x *IngestionJob) GetFeatureSets() []*FeatureSet {
	if x != nil {
		return x.FeatureSets
	}
	return nil
}

func (x *IngestionJob) GetSource() *Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *IngestionJob) GetStore() *Store {
	if x != nil {
		return x.Store
	}
	return nil
}

var File_feast_core_IngestionJob_proto protoreflect.FileDescriptor

var file_feast_core_IngestionJob_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x66, 0x65, 0x61, 0x73, 0x74, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x49, 0x6e, 0x67,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0a, 0x66, 0x65, 0x61, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x1a, 0x1b, 0x66, 0x65, 0x61,
	0x73, 0x74, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53,
	0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x66, 0x65, 0x61, 0x73, 0x74, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x17, 0x66, 0x65, 0x61, 0x73, 0x74, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x02, 0x0a, 0x0c, 0x49, 0x6e,
	0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x66, 0x65,
	0x61, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0c, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x73,
	0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x65, 0x61, 0x73,
	0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65,
	0x74, 0x52, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x74, 0x73, 0x12, 0x2a,
	0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x66, 0x65, 0x61, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x65, 0x61, 0x73,
	0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2a, 0x8f, 0x01, 0x0a, 0x12, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49,
	0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10,
	0x02, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x0c, 0x0a, 0x08, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x0b,
	0x0a, 0x07, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x55, 0x53, 0x50, 0x45, 0x4e,
	0x44, 0x49, 0x4e, 0x47, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x53, 0x50, 0x45, 0x4e,
	0x44, 0x45, 0x44, 0x10, 0x08, 0x42, 0x50, 0x0a, 0x0a, 0x66, 0x65, 0x61, 0x73, 0x74, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x42, 0x11, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4a, 0x6f,
	0x62, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6a, 0x65, 0x6b, 0x2f, 0x66, 0x65, 0x61, 0x73, 0x74, 0x2f, 0x73,
	0x64, 0x6b, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x66, 0x65, 0x61,
	0x73, 0x74, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_feast_core_IngestionJob_proto_rawDescOnce sync.Once
	file_feast_core_IngestionJob_proto_rawDescData = file_feast_core_IngestionJob_proto_rawDesc
)

func file_feast_core_IngestionJob_proto_rawDescGZIP() []byte {
	file_feast_core_IngestionJob_proto_rawDescOnce.Do(func() {
		file_feast_core_IngestionJob_proto_rawDescData = protoimpl.X.CompressGZIP(file_feast_core_IngestionJob_proto_rawDescData)
	})
	return file_feast_core_IngestionJob_proto_rawDescData
}

var file_feast_core_IngestionJob_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_feast_core_IngestionJob_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_feast_core_IngestionJob_proto_goTypes = []interface{}{
	(IngestionJobStatus)(0), // 0: feast.core.IngestionJobStatus
	(*IngestionJob)(nil),    // 1: feast.core.IngestionJob
	(*FeatureSet)(nil),      // 2: feast.core.FeatureSet
	(*Source)(nil),          // 3: feast.core.Source
	(*Store)(nil),           // 4: feast.core.Store
}
var file_feast_core_IngestionJob_proto_depIdxs = []int32{
	0, // 0: feast.core.IngestionJob.status:type_name -> feast.core.IngestionJobStatus
	2, // 1: feast.core.IngestionJob.feature_sets:type_name -> feast.core.FeatureSet
	3, // 2: feast.core.IngestionJob.source:type_name -> feast.core.Source
	4, // 3: feast.core.IngestionJob.store:type_name -> feast.core.Store
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_feast_core_IngestionJob_proto_init() }
func file_feast_core_IngestionJob_proto_init() {
	if File_feast_core_IngestionJob_proto != nil {
		return
	}
	file_feast_core_FeatureSet_proto_init()
	file_feast_core_Store_proto_init()
	file_feast_core_Source_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_feast_core_IngestionJob_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngestionJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_feast_core_IngestionJob_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_feast_core_IngestionJob_proto_goTypes,
		DependencyIndexes: file_feast_core_IngestionJob_proto_depIdxs,
		EnumInfos:         file_feast_core_IngestionJob_proto_enumTypes,
		MessageInfos:      file_feast_core_IngestionJob_proto_msgTypes,
	}.Build()
	File_feast_core_IngestionJob_proto = out.File
	file_feast_core_IngestionJob_proto_rawDesc = nil
	file_feast_core_IngestionJob_proto_goTypes = nil
	file_feast_core_IngestionJob_proto_depIdxs = nil
}
