// Code generated by protoc-gen-go. DO NOT EDIT.
// source: feast/core/FeatureSet.proto

package core

import (
	fmt "fmt"
	types "github.com/gojek/feast/sdk/go/protos/feast/types"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FeatureSetStatus int32

const (
	FeatureSetStatus_STATUS_INVALID FeatureSetStatus = 0
	FeatureSetStatus_STATUS_PENDING FeatureSetStatus = 1
	FeatureSetStatus_STATUS_READY   FeatureSetStatus = 2
)

var FeatureSetStatus_name = map[int32]string{
	0: "STATUS_INVALID",
	1: "STATUS_PENDING",
	2: "STATUS_READY",
}

var FeatureSetStatus_value = map[string]int32{
	"STATUS_INVALID": 0,
	"STATUS_PENDING": 1,
	"STATUS_READY":   2,
}

func (x FeatureSetStatus) String() string {
	return proto.EnumName(FeatureSetStatus_name, int32(x))
}

func (FeatureSetStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_972fbd278ac19c0c, []int{0}
}

type FeatureSet struct {
	// User-specified specifications of this feature set.
	Spec *FeatureSetSpec `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	// System-populated metadata for this feature set.
	Meta                 *FeatureSetMeta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *FeatureSet) Reset()         { *m = FeatureSet{} }
func (m *FeatureSet) String() string { return proto.CompactTextString(m) }
func (*FeatureSet) ProtoMessage()    {}
func (*FeatureSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_972fbd278ac19c0c, []int{0}
}

func (m *FeatureSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeatureSet.Unmarshal(m, b)
}
func (m *FeatureSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeatureSet.Marshal(b, m, deterministic)
}
func (m *FeatureSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeatureSet.Merge(m, src)
}
func (m *FeatureSet) XXX_Size() int {
	return xxx_messageInfo_FeatureSet.Size(m)
}
func (m *FeatureSet) XXX_DiscardUnknown() {
	xxx_messageInfo_FeatureSet.DiscardUnknown(m)
}

var xxx_messageInfo_FeatureSet proto.InternalMessageInfo

func (m *FeatureSet) GetSpec() *FeatureSetSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *FeatureSet) GetMeta() *FeatureSetMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type FeatureSetSpec struct {
	// Name of project that this feature set belongs to.
	Project string `protobuf:"bytes,7,opt,name=project,proto3" json:"project,omitempty"`
	// Name of the feature set. Must be unique.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Feature set version.
	Version int32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	// List of entities contained within this featureSet.
	// This allows the feature to be used during joins between feature sets.
	// If the featureSet is ingested into a store that supports keys, this value
	// will be made a key.
	Entities []*EntitySpec `protobuf:"bytes,3,rep,name=entities,proto3" json:"entities,omitempty"`
	// List of features contained within this featureSet.
	Features []*FeatureSpec `protobuf:"bytes,4,rep,name=features,proto3" json:"features,omitempty"`
	// Features in this feature set will only be retrieved if they are found
	// after [time - max_age]. Missing or older feature values will be returned
	// as nulls and indicated to end user
	MaxAge *duration.Duration `protobuf:"bytes,5,opt,name=max_age,json=maxAge,proto3" json:"max_age,omitempty"`
	// Optional. Source on which feature rows can be found.
	// If not set, source will be set to the default value configured in Feast Core.
	Source               *Source  `protobuf:"bytes,6,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeatureSetSpec) Reset()         { *m = FeatureSetSpec{} }
func (m *FeatureSetSpec) String() string { return proto.CompactTextString(m) }
func (*FeatureSetSpec) ProtoMessage()    {}
func (*FeatureSetSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_972fbd278ac19c0c, []int{1}
}

func (m *FeatureSetSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeatureSetSpec.Unmarshal(m, b)
}
func (m *FeatureSetSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeatureSetSpec.Marshal(b, m, deterministic)
}
func (m *FeatureSetSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeatureSetSpec.Merge(m, src)
}
func (m *FeatureSetSpec) XXX_Size() int {
	return xxx_messageInfo_FeatureSetSpec.Size(m)
}
func (m *FeatureSetSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_FeatureSetSpec.DiscardUnknown(m)
}

var xxx_messageInfo_FeatureSetSpec proto.InternalMessageInfo

func (m *FeatureSetSpec) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *FeatureSetSpec) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FeatureSetSpec) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *FeatureSetSpec) GetEntities() []*EntitySpec {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *FeatureSetSpec) GetFeatures() []*FeatureSpec {
	if m != nil {
		return m.Features
	}
	return nil
}

func (m *FeatureSetSpec) GetMaxAge() *duration.Duration {
	if m != nil {
		return m.MaxAge
	}
	return nil
}

func (m *FeatureSetSpec) GetSource() *Source {
	if m != nil {
		return m.Source
	}
	return nil
}

type EntitySpec struct {
	// Name of the entity.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Value type of the feature.
	ValueType            types.ValueType_Enum `protobuf:"varint,2,opt,name=value_type,json=valueType,proto3,enum=feast.types.ValueType_Enum" json:"value_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *EntitySpec) Reset()         { *m = EntitySpec{} }
func (m *EntitySpec) String() string { return proto.CompactTextString(m) }
func (*EntitySpec) ProtoMessage()    {}
func (*EntitySpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_972fbd278ac19c0c, []int{2}
}

func (m *EntitySpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntitySpec.Unmarshal(m, b)
}
func (m *EntitySpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntitySpec.Marshal(b, m, deterministic)
}
func (m *EntitySpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntitySpec.Merge(m, src)
}
func (m *EntitySpec) XXX_Size() int {
	return xxx_messageInfo_EntitySpec.Size(m)
}
func (m *EntitySpec) XXX_DiscardUnknown() {
	xxx_messageInfo_EntitySpec.DiscardUnknown(m)
}

var xxx_messageInfo_EntitySpec proto.InternalMessageInfo

func (m *EntitySpec) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EntitySpec) GetValueType() types.ValueType_Enum {
	if m != nil {
		return m.ValueType
	}
	return types.ValueType_INVALID
}

type FeatureSpec struct {
	// Name of the feature.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Value type of the feature.
	ValueType            types.ValueType_Enum `protobuf:"varint,2,opt,name=value_type,json=valueType,proto3,enum=feast.types.ValueType_Enum" json:"value_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FeatureSpec) Reset()         { *m = FeatureSpec{} }
func (m *FeatureSpec) String() string { return proto.CompactTextString(m) }
func (*FeatureSpec) ProtoMessage()    {}
func (*FeatureSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_972fbd278ac19c0c, []int{3}
}

func (m *FeatureSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeatureSpec.Unmarshal(m, b)
}
func (m *FeatureSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeatureSpec.Marshal(b, m, deterministic)
}
func (m *FeatureSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeatureSpec.Merge(m, src)
}
func (m *FeatureSpec) XXX_Size() int {
	return xxx_messageInfo_FeatureSpec.Size(m)
}
func (m *FeatureSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_FeatureSpec.DiscardUnknown(m)
}

var xxx_messageInfo_FeatureSpec proto.InternalMessageInfo

func (m *FeatureSpec) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FeatureSpec) GetValueType() types.ValueType_Enum {
	if m != nil {
		return m.ValueType
	}
	return types.ValueType_INVALID
}

type FeatureSetMeta struct {
	// Created timestamp of this specific feature set.
	CreatedTimestamp *timestamp.Timestamp `protobuf:"bytes,1,opt,name=created_timestamp,json=createdTimestamp,proto3" json:"created_timestamp,omitempty"`
	// Status of the feature set.
	// Used to indicate whether the feature set is ready for consumption or ingestion.
	// Currently supports 2 states:
	// 1) STATUS_PENDING - A feature set is in pending state if Feast has not spun up the jobs
	// necessary to push rows for this feature set to stores subscribing to this feature set.
	// 2) STATUS_READY - Feature set is ready for consumption or ingestion
	Status               FeatureSetStatus `protobuf:"varint,2,opt,name=status,proto3,enum=feast.core.FeatureSetStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *FeatureSetMeta) Reset()         { *m = FeatureSetMeta{} }
func (m *FeatureSetMeta) String() string { return proto.CompactTextString(m) }
func (*FeatureSetMeta) ProtoMessage()    {}
func (*FeatureSetMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_972fbd278ac19c0c, []int{4}
}

func (m *FeatureSetMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeatureSetMeta.Unmarshal(m, b)
}
func (m *FeatureSetMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeatureSetMeta.Marshal(b, m, deterministic)
}
func (m *FeatureSetMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeatureSetMeta.Merge(m, src)
}
func (m *FeatureSetMeta) XXX_Size() int {
	return xxx_messageInfo_FeatureSetMeta.Size(m)
}
func (m *FeatureSetMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_FeatureSetMeta.DiscardUnknown(m)
}

var xxx_messageInfo_FeatureSetMeta proto.InternalMessageInfo

func (m *FeatureSetMeta) GetCreatedTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedTimestamp
	}
	return nil
}

func (m *FeatureSetMeta) GetStatus() FeatureSetStatus {
	if m != nil {
		return m.Status
	}
	return FeatureSetStatus_STATUS_INVALID
}

func init() {
	proto.RegisterEnum("feast.core.FeatureSetStatus", FeatureSetStatus_name, FeatureSetStatus_value)
	proto.RegisterType((*FeatureSet)(nil), "feast.core.FeatureSet")
	proto.RegisterType((*FeatureSetSpec)(nil), "feast.core.FeatureSetSpec")
	proto.RegisterType((*EntitySpec)(nil), "feast.core.EntitySpec")
	proto.RegisterType((*FeatureSpec)(nil), "feast.core.FeatureSpec")
	proto.RegisterType((*FeatureSetMeta)(nil), "feast.core.FeatureSetMeta")
}

func init() { proto.RegisterFile("feast/core/FeatureSet.proto", fileDescriptor_972fbd278ac19c0c) }

var fileDescriptor_972fbd278ac19c0c = []byte{
	// 510 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0x4f, 0x6f, 0xda, 0x30,
	0x18, 0xc6, 0x07, 0xa5, 0x50, 0x5e, 0x26, 0x96, 0xf9, 0xb0, 0x66, 0xed, 0xb4, 0x21, 0x4e, 0xa8,
	0x07, 0x5b, 0x4a, 0x77, 0xda, 0x8d, 0x0a, 0x56, 0x21, 0x75, 0xa8, 0x72, 0x58, 0xa5, 0x4d, 0x9b,
	0x90, 0x09, 0x2f, 0x59, 0x5a, 0x82, 0xa3, 0xd8, 0x41, 0xe5, 0x53, 0xec, 0x33, 0xec, 0x9b, 0x4e,
	0x71, 0x12, 0x92, 0xa1, 0x6e, 0xa7, 0xdd, 0x62, 0x3f, 0x3f, 0xbf, 0x79, 0xde, 0x7f, 0x70, 0xbe,
	0x42, 0xa1, 0x34, 0xf3, 0x64, 0x8c, 0xec, 0x23, 0x0a, 0x9d, 0xc4, 0xe8, 0xa2, 0xa6, 0x51, 0x2c,
	0xb5, 0x24, 0x60, 0x44, 0x9a, 0x8a, 0x67, 0xa7, 0x19, 0xa8, 0x77, 0x11, 0x2a, 0x76, 0x27, 0xd6,
	0x09, 0x66, 0x50, 0x21, 0x98, 0x08, 0xae, 0x4c, 0x62, 0xaf, 0x10, 0xde, 0xfa, 0x52, 0xfa, 0x6b,
	0x64, 0xe6, 0xb4, 0x48, 0x56, 0x6c, 0x99, 0xc4, 0x42, 0x07, 0x72, 0x93, 0xeb, 0xef, 0x0e, 0x75,
	0x1d, 0x84, 0xa8, 0xb4, 0x08, 0xa3, 0x0c, 0xe8, 0xaf, 0x01, 0x4a, 0x4b, 0x84, 0x42, 0x43, 0x45,
	0xe8, 0xd9, 0xb5, 0x5e, 0x6d, 0xd0, 0x71, 0xce, 0x68, 0xe9, 0x8d, 0x96, 0x94, 0x1b, 0xa1, 0xc7,
	0x0d, 0x97, 0xf2, 0x21, 0x6a, 0x61, 0xd7, 0xff, 0xc5, 0x7f, 0x42, 0x2d, 0xb8, 0xe1, 0xfa, 0xbf,
	0xea, 0xd0, 0xfd, 0x33, 0x10, 0xb1, 0xa1, 0x15, 0xc5, 0xf2, 0x1e, 0x3d, 0x6d, 0xb7, 0x7a, 0xb5,
	0x41, 0x9b, 0x17, 0x47, 0x42, 0xa0, 0xb1, 0x11, 0x21, 0x1a, 0x33, 0x6d, 0x6e, 0xbe, 0x53, 0x7a,
	0x8b, 0xb1, 0x0a, 0xe4, 0xc6, 0xfc, 0xf3, 0x98, 0x17, 0x47, 0xe2, 0xc0, 0x09, 0x6e, 0x74, 0xa0,
	0x03, 0x54, 0xf6, 0x51, 0xef, 0x68, 0xd0, 0x71, 0x5e, 0x55, 0xed, 0x8c, 0x53, 0x6d, 0x67, 0xac,
	0xef, 0x39, 0x72, 0x09, 0x27, 0xab, 0xcc, 0x8d, 0xb2, 0x1b, 0xe6, 0xcd, 0xe9, 0x53, 0x29, 0x98,
	0x47, 0x05, 0x48, 0x1c, 0x68, 0x85, 0xe2, 0x71, 0x2e, 0x7c, 0xb4, 0x8f, 0x4d, 0xda, 0xaf, 0x69,
	0x56, 0x64, 0x5a, 0x14, 0x99, 0x8e, 0xf2, 0x26, 0xf0, 0x66, 0x28, 0x1e, 0x87, 0x3e, 0x92, 0x0b,
	0x68, 0x2a, 0xd3, 0x36, 0xbb, 0x69, 0x9e, 0x90, 0xea, 0x6f, 0xb2, 0x86, 0xf2, 0x9c, 0xe8, 0x7f,
	0x03, 0x28, 0xcd, 0x3e, 0x59, 0x84, 0x0f, 0x00, 0xdb, 0x74, 0x38, 0xe6, 0xe9, 0xa0, 0x98, 0x3a,
	0x74, 0x9d, 0xf3, 0x3c, 0xa2, 0x99, 0x1d, 0x6a, 0x66, 0x67, 0xb6, 0x8b, 0xd2, 0xbc, 0x93, 0x90,
	0xb7, 0xb7, 0xc5, 0xb9, 0xff, 0x1d, 0x3a, 0x95, 0xb4, 0xfe, 0x7b, 0xf8, 0x9f, 0xb5, 0x6a, 0x83,
	0xd3, 0xce, 0x93, 0x6b, 0x78, 0xe9, 0xc5, 0x28, 0x34, 0x2e, 0xe7, 0xfb, 0xe1, 0xdb, 0x0f, 0xd8,
	0x61, 0xe5, 0x66, 0x05, 0xc1, 0xad, 0xfc, 0xd1, 0xfe, 0x86, 0xbc, 0x87, 0xa6, 0xd2, 0x42, 0x27,
	0x2a, 0xf7, 0xf4, 0xe6, 0x2f, 0xe3, 0x69, 0x18, 0x9e, 0xb3, 0x17, 0x37, 0x60, 0x1d, 0x6a, 0x84,
	0x40, 0xd7, 0x9d, 0x0d, 0x67, 0x9f, 0xdd, 0xf9, 0x64, 0x7a, 0x37, 0xbc, 0x99, 0x8c, 0xac, 0x67,
	0x95, 0xbb, 0xdb, 0xf1, 0x74, 0x34, 0x99, 0x5e, 0x5b, 0x35, 0x62, 0xc1, 0xf3, 0xfc, 0x8e, 0x8f,
	0x87, 0xa3, 0x2f, 0x56, 0xfd, 0x6a, 0x0a, 0x95, 0x7d, 0xbd, 0x7a, 0x51, 0x46, 0xbe, 0x4d, 0x33,
	0xf8, 0xca, 0xfc, 0x40, 0xff, 0x48, 0x16, 0xd4, 0x93, 0x21, 0xf3, 0xe5, 0x3d, 0x3e, 0xb0, 0x6c,
	0x71, 0xd5, 0xf2, 0x81, 0xf9, 0x32, 0xdb, 0x42, 0xc5, 0xca, 0x65, 0x5e, 0x34, 0xcd, 0xd5, 0xe5,
	0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb8, 0xd5, 0xf0, 0x13, 0x23, 0x04, 0x00, 0x00,
}
