// Code generated by protoc-gen-go. DO NOT EDIT.
// source: feast/serving/ServingService.proto

package serving

import (
	context "context"
	fmt "fmt"
	types "github.com/gojek/feast/sdk/go/protos/feast/types"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FeastServingType int32

const (
	FeastServingType_FEAST_SERVING_TYPE_INVALID FeastServingType = 0
	// Online serving receives entity data directly and synchronously and will
	// respond immediately.
	FeastServingType_FEAST_SERVING_TYPE_ONLINE FeastServingType = 1
	// Batch serving receives entity data asynchronously and orchestrates the
	// retrieval through a staging location.
	FeastServingType_FEAST_SERVING_TYPE_BATCH FeastServingType = 2
)

var FeastServingType_name = map[int32]string{
	0: "FEAST_SERVING_TYPE_INVALID",
	1: "FEAST_SERVING_TYPE_ONLINE",
	2: "FEAST_SERVING_TYPE_BATCH",
}

var FeastServingType_value = map[string]int32{
	"FEAST_SERVING_TYPE_INVALID": 0,
	"FEAST_SERVING_TYPE_ONLINE":  1,
	"FEAST_SERVING_TYPE_BATCH":   2,
}

func (x FeastServingType) String() string {
	return proto.EnumName(FeastServingType_name, int32(x))
}

func (FeastServingType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0c1ba93cf29a8d9d, []int{0}
}

type JobType int32

const (
	JobType_JOB_TYPE_INVALID  JobType = 0
	JobType_JOB_TYPE_DOWNLOAD JobType = 1
)

var JobType_name = map[int32]string{
	0: "JOB_TYPE_INVALID",
	1: "JOB_TYPE_DOWNLOAD",
}

var JobType_value = map[string]int32{
	"JOB_TYPE_INVALID":  0,
	"JOB_TYPE_DOWNLOAD": 1,
}

func (x JobType) String() string {
	return proto.EnumName(JobType_name, int32(x))
}

func (JobType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0c1ba93cf29a8d9d, []int{1}
}

type JobStatus int32

const (
	JobStatus_JOB_STATUS_INVALID JobStatus = 0
	JobStatus_JOB_STATUS_PENDING JobStatus = 1
	JobStatus_JOB_STATUS_RUNNING JobStatus = 2
	JobStatus_JOB_STATUS_DONE    JobStatus = 3
)

var JobStatus_name = map[int32]string{
	0: "JOB_STATUS_INVALID",
	1: "JOB_STATUS_PENDING",
	2: "JOB_STATUS_RUNNING",
	3: "JOB_STATUS_DONE",
}

var JobStatus_value = map[string]int32{
	"JOB_STATUS_INVALID": 0,
	"JOB_STATUS_PENDING": 1,
	"JOB_STATUS_RUNNING": 2,
	"JOB_STATUS_DONE":    3,
}

func (x JobStatus) String() string {
	return proto.EnumName(JobStatus_name, int32(x))
}

func (JobStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0c1ba93cf29a8d9d, []int{2}
}

type DataFormat int32

const (
	DataFormat_DATA_FORMAT_INVALID DataFormat = 0
	DataFormat_DATA_FORMAT_AVRO    DataFormat = 1
)

var DataFormat_name = map[int32]string{
	0: "DATA_FORMAT_INVALID",
	1: "DATA_FORMAT_AVRO",
}

var DataFormat_value = map[string]int32{
	"DATA_FORMAT_INVALID": 0,
	"DATA_FORMAT_AVRO":    1,
}

func (x DataFormat) String() string {
	return proto.EnumName(DataFormat_name, int32(x))
}

func (DataFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0c1ba93cf29a8d9d, []int{3}
}

type GetFeastServingInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFeastServingInfoRequest) Reset()         { *m = GetFeastServingInfoRequest{} }
func (m *GetFeastServingInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetFeastServingInfoRequest) ProtoMessage()    {}
func (*GetFeastServingInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c1ba93cf29a8d9d, []int{0}
}

func (m *GetFeastServingInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFeastServingInfoRequest.Unmarshal(m, b)
}
func (m *GetFeastServingInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFeastServingInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetFeastServingInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFeastServingInfoRequest.Merge(m, src)
}
func (m *GetFeastServingInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetFeastServingInfoRequest.Size(m)
}
func (m *GetFeastServingInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFeastServingInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFeastServingInfoRequest proto.InternalMessageInfo

type GetFeastServingInfoResponse struct {
	// Feast version of this serving deployment.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Type of serving deployment, either ONLINE or BATCH. Different store types support different
	// feature retrieval methods.
	Type FeastServingType `protobuf:"varint,2,opt,name=type,proto3,enum=feast.serving.FeastServingType" json:"type,omitempty"`
	// Note: Batch specific options start from 10.
	// Staging location for this serving store, if any.
	JobStagingLocation   string   `protobuf:"bytes,10,opt,name=job_staging_location,json=jobStagingLocation,proto3" json:"job_staging_location,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFeastServingInfoResponse) Reset()         { *m = GetFeastServingInfoResponse{} }
func (m *GetFeastServingInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetFeastServingInfoResponse) ProtoMessage()    {}
func (*GetFeastServingInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c1ba93cf29a8d9d, []int{1}
}

func (m *GetFeastServingInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFeastServingInfoResponse.Unmarshal(m, b)
}
func (m *GetFeastServingInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFeastServingInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetFeastServingInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFeastServingInfoResponse.Merge(m, src)
}
func (m *GetFeastServingInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetFeastServingInfoResponse.Size(m)
}
func (m *GetFeastServingInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFeastServingInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetFeastServingInfoResponse proto.InternalMessageInfo

func (m *GetFeastServingInfoResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *GetFeastServingInfoResponse) GetType() FeastServingType {
	if m != nil {
		return m.Type
	}
	return FeastServingType_FEAST_SERVING_TYPE_INVALID
}

func (m *GetFeastServingInfoResponse) GetJobStagingLocation() string {
	if m != nil {
		return m.JobStagingLocation
	}
	return ""
}

type FeatureReference struct {
	// Project name
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// Feature name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Feature version
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// The features will be retrieved if:
	// entity_timestamp - max_age  <= event_timestamp <= entity_timestamp
	//
	// If unspecified the default max_age specified in FeatureSetSpec will
	// be used.
	MaxAge               *duration.Duration `protobuf:"bytes,4,opt,name=max_age,json=maxAge,proto3" json:"max_age,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *FeatureReference) Reset()         { *m = FeatureReference{} }
func (m *FeatureReference) String() string { return proto.CompactTextString(m) }
func (*FeatureReference) ProtoMessage()    {}
func (*FeatureReference) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c1ba93cf29a8d9d, []int{2}
}

func (m *FeatureReference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeatureReference.Unmarshal(m, b)
}
func (m *FeatureReference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeatureReference.Marshal(b, m, deterministic)
}
func (m *FeatureReference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeatureReference.Merge(m, src)
}
func (m *FeatureReference) XXX_Size() int {
	return xxx_messageInfo_FeatureReference.Size(m)
}
func (m *FeatureReference) XXX_DiscardUnknown() {
	xxx_messageInfo_FeatureReference.DiscardUnknown(m)
}

var xxx_messageInfo_FeatureReference proto.InternalMessageInfo

func (m *FeatureReference) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *FeatureReference) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FeatureReference) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *FeatureReference) GetMaxAge() *duration.Duration {
	if m != nil {
		return m.MaxAge
	}
	return nil
}

type GetOnlineFeaturesRequest struct {
	// List of features that are being retrieved
	Features []*FeatureReference `protobuf:"bytes,4,rep,name=features,proto3" json:"features,omitempty"`
	// List of entity rows, containing entity id and timestamp data.
	// Used during retrieval of feature rows and for joining feature
	// rows into a final dataset
	EntityRows []*GetOnlineFeaturesRequest_EntityRow `protobuf:"bytes,2,rep,name=entity_rows,json=entityRows,proto3" json:"entity_rows,omitempty"`
	// Option to omit entities from the response. If true, only feature
	// values will be returned.
	OmitEntitiesInResponse bool     `protobuf:"varint,3,opt,name=omit_entities_in_response,json=omitEntitiesInResponse,proto3" json:"omit_entities_in_response,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *GetOnlineFeaturesRequest) Reset()         { *m = GetOnlineFeaturesRequest{} }
func (m *GetOnlineFeaturesRequest) String() string { return proto.CompactTextString(m) }
func (*GetOnlineFeaturesRequest) ProtoMessage()    {}
func (*GetOnlineFeaturesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c1ba93cf29a8d9d, []int{3}
}

func (m *GetOnlineFeaturesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOnlineFeaturesRequest.Unmarshal(m, b)
}
func (m *GetOnlineFeaturesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOnlineFeaturesRequest.Marshal(b, m, deterministic)
}
func (m *GetOnlineFeaturesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOnlineFeaturesRequest.Merge(m, src)
}
func (m *GetOnlineFeaturesRequest) XXX_Size() int {
	return xxx_messageInfo_GetOnlineFeaturesRequest.Size(m)
}
func (m *GetOnlineFeaturesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOnlineFeaturesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOnlineFeaturesRequest proto.InternalMessageInfo

func (m *GetOnlineFeaturesRequest) GetFeatures() []*FeatureReference {
	if m != nil {
		return m.Features
	}
	return nil
}

func (m *GetOnlineFeaturesRequest) GetEntityRows() []*GetOnlineFeaturesRequest_EntityRow {
	if m != nil {
		return m.EntityRows
	}
	return nil
}

func (m *GetOnlineFeaturesRequest) GetOmitEntitiesInResponse() bool {
	if m != nil {
		return m.OmitEntitiesInResponse
	}
	return false
}

type GetOnlineFeaturesRequest_EntityRow struct {
	// Request timestamp of this row. This value will be used, together with maxAge,
	// to determine feature staleness.
	EntityTimestamp *timestamp.Timestamp `protobuf:"bytes,1,opt,name=entity_timestamp,json=entityTimestamp,proto3" json:"entity_timestamp,omitempty"`
	// Map containing mapping of entity name to entity value.
	Fields               map[string]*types.Value `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GetOnlineFeaturesRequest_EntityRow) Reset()         { *m = GetOnlineFeaturesRequest_EntityRow{} }
func (m *GetOnlineFeaturesRequest_EntityRow) String() string { return proto.CompactTextString(m) }
func (*GetOnlineFeaturesRequest_EntityRow) ProtoMessage()    {}
func (*GetOnlineFeaturesRequest_EntityRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c1ba93cf29a8d9d, []int{3, 0}
}

func (m *GetOnlineFeaturesRequest_EntityRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOnlineFeaturesRequest_EntityRow.Unmarshal(m, b)
}
func (m *GetOnlineFeaturesRequest_EntityRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOnlineFeaturesRequest_EntityRow.Marshal(b, m, deterministic)
}
func (m *GetOnlineFeaturesRequest_EntityRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOnlineFeaturesRequest_EntityRow.Merge(m, src)
}
func (m *GetOnlineFeaturesRequest_EntityRow) XXX_Size() int {
	return xxx_messageInfo_GetOnlineFeaturesRequest_EntityRow.Size(m)
}
func (m *GetOnlineFeaturesRequest_EntityRow) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOnlineFeaturesRequest_EntityRow.DiscardUnknown(m)
}

var xxx_messageInfo_GetOnlineFeaturesRequest_EntityRow proto.InternalMessageInfo

func (m *GetOnlineFeaturesRequest_EntityRow) GetEntityTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.EntityTimestamp
	}
	return nil
}

func (m *GetOnlineFeaturesRequest_EntityRow) GetFields() map[string]*types.Value {
	if m != nil {
		return m.Fields
	}
	return nil
}

type GetBatchFeaturesRequest struct {
	// List of features that are being retrieved
	Features []*FeatureReference `protobuf:"bytes,4,rep,name=features,proto3" json:"features,omitempty"`
	// Source of the entity dataset containing the timestamps and entity keys to retrieve
	// features for.
	DatasetSource        *DatasetSource `protobuf:"bytes,2,opt,name=dataset_source,json=datasetSource,proto3" json:"dataset_source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetBatchFeaturesRequest) Reset()         { *m = GetBatchFeaturesRequest{} }
func (m *GetBatchFeaturesRequest) String() string { return proto.CompactTextString(m) }
func (*GetBatchFeaturesRequest) ProtoMessage()    {}
func (*GetBatchFeaturesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c1ba93cf29a8d9d, []int{4}
}

func (m *GetBatchFeaturesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBatchFeaturesRequest.Unmarshal(m, b)
}
func (m *GetBatchFeaturesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBatchFeaturesRequest.Marshal(b, m, deterministic)
}
func (m *GetBatchFeaturesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBatchFeaturesRequest.Merge(m, src)
}
func (m *GetBatchFeaturesRequest) XXX_Size() int {
	return xxx_messageInfo_GetBatchFeaturesRequest.Size(m)
}
func (m *GetBatchFeaturesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBatchFeaturesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBatchFeaturesRequest proto.InternalMessageInfo

func (m *GetBatchFeaturesRequest) GetFeatures() []*FeatureReference {
	if m != nil {
		return m.Features
	}
	return nil
}

func (m *GetBatchFeaturesRequest) GetDatasetSource() *DatasetSource {
	if m != nil {
		return m.DatasetSource
	}
	return nil
}

type GetOnlineFeaturesResponse struct {
	// Feature values retrieved from feast.
	FieldValues          []*GetOnlineFeaturesResponse_FieldValues `protobuf:"bytes,1,rep,name=field_values,json=fieldValues,proto3" json:"field_values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *GetOnlineFeaturesResponse) Reset()         { *m = GetOnlineFeaturesResponse{} }
func (m *GetOnlineFeaturesResponse) String() string { return proto.CompactTextString(m) }
func (*GetOnlineFeaturesResponse) ProtoMessage()    {}
func (*GetOnlineFeaturesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c1ba93cf29a8d9d, []int{5}
}

func (m *GetOnlineFeaturesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOnlineFeaturesResponse.Unmarshal(m, b)
}
func (m *GetOnlineFeaturesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOnlineFeaturesResponse.Marshal(b, m, deterministic)
}
func (m *GetOnlineFeaturesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOnlineFeaturesResponse.Merge(m, src)
}
func (m *GetOnlineFeaturesResponse) XXX_Size() int {
	return xxx_messageInfo_GetOnlineFeaturesResponse.Size(m)
}
func (m *GetOnlineFeaturesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOnlineFeaturesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetOnlineFeaturesResponse proto.InternalMessageInfo

func (m *GetOnlineFeaturesResponse) GetFieldValues() []*GetOnlineFeaturesResponse_FieldValues {
	if m != nil {
		return m.FieldValues
	}
	return nil
}

type GetOnlineFeaturesResponse_FieldValues struct {
	// Map of feature or entity name to feature/entity values.
	// Timestamps are not returned in this response.
	Fields               map[string]*types.Value `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GetOnlineFeaturesResponse_FieldValues) Reset()         { *m = GetOnlineFeaturesResponse_FieldValues{} }
func (m *GetOnlineFeaturesResponse_FieldValues) String() string { return proto.CompactTextString(m) }
func (*GetOnlineFeaturesResponse_FieldValues) ProtoMessage()    {}
func (*GetOnlineFeaturesResponse_FieldValues) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c1ba93cf29a8d9d, []int{5, 0}
}

func (m *GetOnlineFeaturesResponse_FieldValues) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOnlineFeaturesResponse_FieldValues.Unmarshal(m, b)
}
func (m *GetOnlineFeaturesResponse_FieldValues) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOnlineFeaturesResponse_FieldValues.Marshal(b, m, deterministic)
}
func (m *GetOnlineFeaturesResponse_FieldValues) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOnlineFeaturesResponse_FieldValues.Merge(m, src)
}
func (m *GetOnlineFeaturesResponse_FieldValues) XXX_Size() int {
	return xxx_messageInfo_GetOnlineFeaturesResponse_FieldValues.Size(m)
}
func (m *GetOnlineFeaturesResponse_FieldValues) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOnlineFeaturesResponse_FieldValues.DiscardUnknown(m)
}

var xxx_messageInfo_GetOnlineFeaturesResponse_FieldValues proto.InternalMessageInfo

func (m *GetOnlineFeaturesResponse_FieldValues) GetFields() map[string]*types.Value {
	if m != nil {
		return m.Fields
	}
	return nil
}

type GetBatchFeaturesResponse struct {
	Job                  *Job     `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBatchFeaturesResponse) Reset()         { *m = GetBatchFeaturesResponse{} }
func (m *GetBatchFeaturesResponse) String() string { return proto.CompactTextString(m) }
func (*GetBatchFeaturesResponse) ProtoMessage()    {}
func (*GetBatchFeaturesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c1ba93cf29a8d9d, []int{6}
}

func (m *GetBatchFeaturesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBatchFeaturesResponse.Unmarshal(m, b)
}
func (m *GetBatchFeaturesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBatchFeaturesResponse.Marshal(b, m, deterministic)
}
func (m *GetBatchFeaturesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBatchFeaturesResponse.Merge(m, src)
}
func (m *GetBatchFeaturesResponse) XXX_Size() int {
	return xxx_messageInfo_GetBatchFeaturesResponse.Size(m)
}
func (m *GetBatchFeaturesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBatchFeaturesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBatchFeaturesResponse proto.InternalMessageInfo

func (m *GetBatchFeaturesResponse) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

type GetJobRequest struct {
	Job                  *Job     `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetJobRequest) Reset()         { *m = GetJobRequest{} }
func (m *GetJobRequest) String() string { return proto.CompactTextString(m) }
func (*GetJobRequest) ProtoMessage()    {}
func (*GetJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c1ba93cf29a8d9d, []int{7}
}

func (m *GetJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobRequest.Unmarshal(m, b)
}
func (m *GetJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobRequest.Marshal(b, m, deterministic)
}
func (m *GetJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobRequest.Merge(m, src)
}
func (m *GetJobRequest) XXX_Size() int {
	return xxx_messageInfo_GetJobRequest.Size(m)
}
func (m *GetJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobRequest proto.InternalMessageInfo

func (m *GetJobRequest) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

type GetJobResponse struct {
	Job                  *Job     `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetJobResponse) Reset()         { *m = GetJobResponse{} }
func (m *GetJobResponse) String() string { return proto.CompactTextString(m) }
func (*GetJobResponse) ProtoMessage()    {}
func (*GetJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c1ba93cf29a8d9d, []int{8}
}

func (m *GetJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobResponse.Unmarshal(m, b)
}
func (m *GetJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobResponse.Marshal(b, m, deterministic)
}
func (m *GetJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobResponse.Merge(m, src)
}
func (m *GetJobResponse) XXX_Size() int {
	return xxx_messageInfo_GetJobResponse.Size(m)
}
func (m *GetJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobResponse proto.InternalMessageInfo

func (m *GetJobResponse) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

type Job struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Output only. The type of the job.
	Type JobType `protobuf:"varint,2,opt,name=type,proto3,enum=feast.serving.JobType" json:"type,omitempty"`
	// Output only. Current state of the job.
	Status JobStatus `protobuf:"varint,3,opt,name=status,proto3,enum=feast.serving.JobStatus" json:"status,omitempty"`
	// Output only. If not empty, the job has failed with this error message.
	Error string `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	// Output only. The list of URIs for the files to be downloaded or
	// uploaded (depends on the job type) for this particular job.
	FileUris []string `protobuf:"bytes,5,rep,name=file_uris,json=fileUris,proto3" json:"file_uris,omitempty"`
	// Output only. The data format for all the files.
	// For CSV format, the files contain both feature values and a column header.
	DataFormat           DataFormat `protobuf:"varint,6,opt,name=data_format,json=dataFormat,proto3,enum=feast.serving.DataFormat" json:"data_format,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c1ba93cf29a8d9d, []int{9}
}

func (m *Job) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job.Unmarshal(m, b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job.Marshal(b, m, deterministic)
}
func (m *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(m, src)
}
func (m *Job) XXX_Size() int {
	return xxx_messageInfo_Job.Size(m)
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

func (m *Job) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Job) GetType() JobType {
	if m != nil {
		return m.Type
	}
	return JobType_JOB_TYPE_INVALID
}

func (m *Job) GetStatus() JobStatus {
	if m != nil {
		return m.Status
	}
	return JobStatus_JOB_STATUS_INVALID
}

func (m *Job) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *Job) GetFileUris() []string {
	if m != nil {
		return m.FileUris
	}
	return nil
}

func (m *Job) GetDataFormat() DataFormat {
	if m != nil {
		return m.DataFormat
	}
	return DataFormat_DATA_FORMAT_INVALID
}

type DatasetSource struct {
	// Types that are valid to be assigned to DatasetSource:
	//	*DatasetSource_FileSource_
	DatasetSource        isDatasetSource_DatasetSource `protobuf_oneof:"dataset_source"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *DatasetSource) Reset()         { *m = DatasetSource{} }
func (m *DatasetSource) String() string { return proto.CompactTextString(m) }
func (*DatasetSource) ProtoMessage()    {}
func (*DatasetSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c1ba93cf29a8d9d, []int{10}
}

func (m *DatasetSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatasetSource.Unmarshal(m, b)
}
func (m *DatasetSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatasetSource.Marshal(b, m, deterministic)
}
func (m *DatasetSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatasetSource.Merge(m, src)
}
func (m *DatasetSource) XXX_Size() int {
	return xxx_messageInfo_DatasetSource.Size(m)
}
func (m *DatasetSource) XXX_DiscardUnknown() {
	xxx_messageInfo_DatasetSource.DiscardUnknown(m)
}

var xxx_messageInfo_DatasetSource proto.InternalMessageInfo

type isDatasetSource_DatasetSource interface {
	isDatasetSource_DatasetSource()
}

type DatasetSource_FileSource_ struct {
	FileSource *DatasetSource_FileSource `protobuf:"bytes,1,opt,name=file_source,json=fileSource,proto3,oneof"`
}

func (*DatasetSource_FileSource_) isDatasetSource_DatasetSource() {}

func (m *DatasetSource) GetDatasetSource() isDatasetSource_DatasetSource {
	if m != nil {
		return m.DatasetSource
	}
	return nil
}

func (m *DatasetSource) GetFileSource() *DatasetSource_FileSource {
	if x, ok := m.GetDatasetSource().(*DatasetSource_FileSource_); ok {
		return x.FileSource
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DatasetSource) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DatasetSource_FileSource_)(nil),
	}
}

type DatasetSource_FileSource struct {
	// URIs to retrieve the dataset from, e.g. gs://bucket/directory/object.csv. Wildcards are
	// supported. This data must be compatible to be uploaded to the serving store, and also be
	// accessible by this serving instance.
	FileUris []string `protobuf:"bytes,1,rep,name=file_uris,json=fileUris,proto3" json:"file_uris,omitempty"`
	// Format of the data. Currently only avro is supported.
	DataFormat           DataFormat `protobuf:"varint,2,opt,name=data_format,json=dataFormat,proto3,enum=feast.serving.DataFormat" json:"data_format,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DatasetSource_FileSource) Reset()         { *m = DatasetSource_FileSource{} }
func (m *DatasetSource_FileSource) String() string { return proto.CompactTextString(m) }
func (*DatasetSource_FileSource) ProtoMessage()    {}
func (*DatasetSource_FileSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c1ba93cf29a8d9d, []int{10, 0}
}

func (m *DatasetSource_FileSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatasetSource_FileSource.Unmarshal(m, b)
}
func (m *DatasetSource_FileSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatasetSource_FileSource.Marshal(b, m, deterministic)
}
func (m *DatasetSource_FileSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatasetSource_FileSource.Merge(m, src)
}
func (m *DatasetSource_FileSource) XXX_Size() int {
	return xxx_messageInfo_DatasetSource_FileSource.Size(m)
}
func (m *DatasetSource_FileSource) XXX_DiscardUnknown() {
	xxx_messageInfo_DatasetSource_FileSource.DiscardUnknown(m)
}

var xxx_messageInfo_DatasetSource_FileSource proto.InternalMessageInfo

func (m *DatasetSource_FileSource) GetFileUris() []string {
	if m != nil {
		return m.FileUris
	}
	return nil
}

func (m *DatasetSource_FileSource) GetDataFormat() DataFormat {
	if m != nil {
		return m.DataFormat
	}
	return DataFormat_DATA_FORMAT_INVALID
}

func init() {
	proto.RegisterEnum("feast.serving.FeastServingType", FeastServingType_name, FeastServingType_value)
	proto.RegisterEnum("feast.serving.JobType", JobType_name, JobType_value)
	proto.RegisterEnum("feast.serving.JobStatus", JobStatus_name, JobStatus_value)
	proto.RegisterEnum("feast.serving.DataFormat", DataFormat_name, DataFormat_value)
	proto.RegisterType((*GetFeastServingInfoRequest)(nil), "feast.serving.GetFeastServingInfoRequest")
	proto.RegisterType((*GetFeastServingInfoResponse)(nil), "feast.serving.GetFeastServingInfoResponse")
	proto.RegisterType((*FeatureReference)(nil), "feast.serving.FeatureReference")
	proto.RegisterType((*GetOnlineFeaturesRequest)(nil), "feast.serving.GetOnlineFeaturesRequest")
	proto.RegisterType((*GetOnlineFeaturesRequest_EntityRow)(nil), "feast.serving.GetOnlineFeaturesRequest.EntityRow")
	proto.RegisterMapType((map[string]*types.Value)(nil), "feast.serving.GetOnlineFeaturesRequest.EntityRow.FieldsEntry")
	proto.RegisterType((*GetBatchFeaturesRequest)(nil), "feast.serving.GetBatchFeaturesRequest")
	proto.RegisterType((*GetOnlineFeaturesResponse)(nil), "feast.serving.GetOnlineFeaturesResponse")
	proto.RegisterType((*GetOnlineFeaturesResponse_FieldValues)(nil), "feast.serving.GetOnlineFeaturesResponse.FieldValues")
	proto.RegisterMapType((map[string]*types.Value)(nil), "feast.serving.GetOnlineFeaturesResponse.FieldValues.FieldsEntry")
	proto.RegisterType((*GetBatchFeaturesResponse)(nil), "feast.serving.GetBatchFeaturesResponse")
	proto.RegisterType((*GetJobRequest)(nil), "feast.serving.GetJobRequest")
	proto.RegisterType((*GetJobResponse)(nil), "feast.serving.GetJobResponse")
	proto.RegisterType((*Job)(nil), "feast.serving.Job")
	proto.RegisterType((*DatasetSource)(nil), "feast.serving.DatasetSource")
	proto.RegisterType((*DatasetSource_FileSource)(nil), "feast.serving.DatasetSource.FileSource")
}

func init() { proto.RegisterFile("feast/serving/ServingService.proto", fileDescriptor_0c1ba93cf29a8d9d) }

var fileDescriptor_0c1ba93cf29a8d9d = []byte{
	// 1097 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0x51, 0x73, 0xda, 0x46,
	0x10, 0x8e, 0xc0, 0xc6, 0x66, 0xa9, 0xb1, 0x72, 0x76, 0x6d, 0x59, 0x71, 0x12, 0x86, 0xe9, 0xd4,
	0x94, 0x07, 0xd1, 0x92, 0x36, 0xd3, 0x26, 0xd3, 0x99, 0x40, 0x10, 0x04, 0x8f, 0x03, 0x9e, 0x03,
	0x3b, 0x6d, 0x5f, 0x34, 0x02, 0x4e, 0x58, 0x36, 0xe8, 0xa8, 0xee, 0x70, 0xe2, 0x3f, 0xd1, 0x87,
	0xbe, 0x76, 0xa6, 0xff, 0xa0, 0xaf, 0xfd, 0x25, 0xfd, 0x03, 0xed, 0xaf, 0xe8, 0x63, 0x47, 0xa7,
	0x03, 0x23, 0xc0, 0x89, 0xdd, 0xe9, 0xf4, 0x49, 0x77, 0xbb, 0xdf, 0xde, 0xde, 0x7e, 0xb7, 0xbb,
	0x5a, 0xc8, 0x3a, 0xc4, 0x66, 0xbc, 0xc0, 0x88, 0x7f, 0xe9, 0x7a, 0xfd, 0x42, 0x2b, 0xfc, 0x8a,
	0x4f, 0x97, 0x18, 0x23, 0x9f, 0x72, 0x8a, 0x36, 0x04, 0xc6, 0x90, 0x18, 0xfd, 0x71, 0x9f, 0xd2,
	0xfe, 0x80, 0x14, 0x84, 0xb2, 0x33, 0x76, 0x0a, 0xdc, 0x1d, 0x12, 0xc6, 0xed, 0xe1, 0x28, 0xc4,
	0xeb, 0x8f, 0xe6, 0x01, 0xbd, 0xb1, 0x6f, 0x73, 0x97, 0x7a, 0x52, 0xbf, 0x1b, 0xfa, 0xe4, 0x57,
	0x23, 0xc2, 0x0a, 0xa7, 0xf6, 0x60, 0x2c, 0x1d, 0x65, 0xf7, 0x41, 0xaf, 0x11, 0x5e, 0x0d, 0xb4,
	0xf2, 0x22, 0x75, 0xcf, 0xa1, 0x98, 0xfc, 0x38, 0x26, 0x8c, 0x67, 0x7f, 0x55, 0xe0, 0xc1, 0x52,
	0x35, 0x1b, 0x51, 0x8f, 0x11, 0xa4, 0xc1, 0xda, 0x25, 0xf1, 0x99, 0x4b, 0x3d, 0x4d, 0xc9, 0x28,
	0xb9, 0x24, 0x9e, 0x6c, 0xd1, 0x13, 0x58, 0x09, 0x9c, 0x69, 0xb1, 0x8c, 0x92, 0x4b, 0x17, 0x1f,
	0x1b, 0x91, 0x78, 0x8c, 0xd9, 0x03, 0xdb, 0x57, 0x23, 0x82, 0x05, 0x18, 0x7d, 0x0e, 0xdb, 0xe7,
	0xb4, 0x63, 0x31, 0x6e, 0xf7, 0x5d, 0xaf, 0x6f, 0x0d, 0x68, 0x57, 0xc4, 0xa0, 0x81, 0x38, 0x1b,
	0x9d, 0xd3, 0x4e, 0x2b, 0x54, 0x1d, 0x49, 0x4d, 0xf6, 0x27, 0x05, 0xd4, 0x2a, 0xb1, 0xf9, 0xd8,
	0x27, 0x98, 0x38, 0xc4, 0x27, 0x5e, 0x57, 0xdc, 0x6a, 0xe4, 0xd3, 0x73, 0xd2, 0xe5, 0x93, 0x5b,
	0xc9, 0x2d, 0x42, 0xb0, 0xe2, 0xd9, 0xc3, 0xf0, 0x56, 0x49, 0x2c, 0xd6, 0xb3, 0x31, 0xc4, 0x33,
	0x4a, 0x6e, 0xf5, 0x3a, 0x86, 0x22, 0xac, 0x0d, 0xed, 0x77, 0x96, 0xdd, 0x27, 0xda, 0x4a, 0x46,
	0xc9, 0xa5, 0x8a, 0x7b, 0x46, 0x48, 0xb3, 0x31, 0xa1, 0xd9, 0xa8, 0x48, 0x9a, 0x71, 0x62, 0x68,
	0xbf, 0x2b, 0xf5, 0x49, 0xf6, 0xcf, 0x38, 0x68, 0x35, 0xc2, 0x9b, 0xde, 0xc0, 0xf5, 0x88, 0xbc,
	0x19, 0x93, 0x74, 0xa2, 0xe7, 0xb0, 0xee, 0x48, 0x91, 0xb6, 0x92, 0x89, 0xe7, 0x52, 0xcb, 0x88,
	0x89, 0xc4, 0x82, 0xa7, 0x06, 0x08, 0x43, 0x8a, 0x78, 0xdc, 0xe5, 0x57, 0x96, 0x4f, 0xdf, 0x32,
	0x2d, 0x26, 0xec, 0xbf, 0x98, 0xb3, 0xbf, 0xc9, 0xb5, 0x61, 0x0a, 0x53, 0x4c, 0xdf, 0x62, 0x20,
	0x93, 0x25, 0x43, 0xdf, 0xc0, 0x1e, 0x1d, 0xba, 0xdc, 0x12, 0x22, 0x97, 0x30, 0xcb, 0xf5, 0x2c,
	0x5f, 0x3e, 0xae, 0x60, 0x63, 0x1d, 0xef, 0x04, 0x00, 0x53, 0xea, 0xeb, 0xde, 0xe4, 0xe9, 0xf5,
	0xbf, 0x15, 0x48, 0x4e, 0x0f, 0x45, 0x26, 0xa8, 0xf2, 0x72, 0xd3, 0xcc, 0x14, 0xdc, 0xa7, 0x8a,
	0xfa, 0x02, 0x67, 0xed, 0x09, 0x02, 0x6f, 0x86, 0x36, 0x53, 0x01, 0x3a, 0x81, 0x84, 0xe3, 0x92,
	0x41, 0x6f, 0x12, 0xde, 0xb7, 0x77, 0x0e, 0xcf, 0xa8, 0x0a, 0x7b, 0xd3, 0xe3, 0xfe, 0x15, 0x96,
	0x87, 0xe9, 0xaf, 0x21, 0x35, 0x23, 0x46, 0x2a, 0xc4, 0x2f, 0xc8, 0x95, 0xcc, 0x8d, 0x60, 0x89,
	0x72, 0xb0, 0x7a, 0x19, 0x14, 0x85, 0x48, 0x8c, 0x54, 0x11, 0x49, 0xb7, 0xa2, 0x5c, 0x0c, 0x51,
	0x2e, 0x38, 0x04, 0x3c, 0x8b, 0x7d, 0xad, 0x64, 0x7f, 0x51, 0x60, 0xb7, 0x46, 0x78, 0xd9, 0xe6,
	0xdd, 0xb3, 0xff, 0xf4, 0x89, 0x5f, 0x42, 0xba, 0x67, 0x73, 0x9b, 0x11, 0x6e, 0x31, 0x3a, 0xf6,
	0xbb, 0x93, 0xfb, 0xec, 0xcf, 0x1d, 0x51, 0x09, 0x41, 0x2d, 0x81, 0xc1, 0x1b, 0xbd, 0xd9, 0x6d,
	0xf6, 0xb7, 0x18, 0xec, 0x2d, 0xe1, 0x49, 0x56, 0xec, 0x1b, 0xf8, 0x48, 0x90, 0x62, 0x89, 0x70,
	0x98, 0xa6, 0x88, 0x3b, 0x7e, 0xf9, 0x61, 0x9e, 0x43, 0xfb, 0x90, 0x5e, 0xc1, 0x08, 0xc3, 0x29,
	0xe7, 0x7a, 0xa3, 0xff, 0xae, 0x48, 0x92, 0xc3, 0x3d, 0xfa, 0x6e, 0xfa, 0x94, 0xa1, 0x8b, 0x17,
	0xff, 0xc6, 0xc5, 0xff, 0xf1, 0x9a, 0x2f, 0x44, 0xc1, 0xce, 0x3d, 0xa6, 0x64, 0xeb, 0x13, 0x88,
	0x9f, 0xd3, 0x8e, 0xcc, 0x64, 0x34, 0x17, 0xc1, 0x21, 0xed, 0xe0, 0x40, 0x9d, 0xfd, 0x0a, 0x36,
	0x6a, 0x84, 0x07, 0x5b, 0x99, 0x04, 0xb7, 0x33, 0x7b, 0x0a, 0xe9, 0x89, 0xd9, 0x9d, 0xdc, 0xfd,
	0xa5, 0x40, 0xfc, 0x90, 0x76, 0x50, 0x1a, 0x62, 0x6e, 0x4f, 0xc6, 0x1d, 0x73, 0x7b, 0x28, 0x1f,
	0x69, 0xb9, 0x3b, 0x8b, 0xe6, 0x91, 0x4e, 0x9b, 0x60, 0xdc, 0xe6, 0x63, 0x26, 0xaa, 0x3c, 0x5d,
	0xd4, 0x16, 0xd1, 0x2d, 0xa1, 0xc7, 0x12, 0x87, 0xb6, 0x61, 0x95, 0xf8, 0x3e, 0xf5, 0x45, 0x2b,
	0x4c, 0xe2, 0x70, 0x83, 0x1e, 0x40, 0xd2, 0x71, 0x07, 0xc4, 0x1a, 0xfb, 0x2e, 0xd3, 0x56, 0x33,
	0xf1, 0x5c, 0x12, 0xaf, 0x07, 0x82, 0x13, 0xdf, 0x65, 0xe8, 0x19, 0xa4, 0x82, 0xd4, 0xb4, 0x1c,
	0xea, 0x0f, 0x6d, 0xae, 0x25, 0x84, 0xa7, 0xbd, 0x25, 0xb9, 0x5c, 0x15, 0x00, 0x0c, 0xbd, 0xe9,
	0x3a, 0xfb, 0x87, 0x02, 0x1b, 0x91, 0x34, 0x47, 0x87, 0x90, 0x12, 0xae, 0x64, 0x65, 0x84, 0x24,
	0x1d, 0xbc, 0xaf, 0x32, 0x8c, 0xaa, 0x3b, 0x20, 0xe1, 0xf2, 0xd5, 0x3d, 0x0c, 0xce, 0x74, 0xa7,
	0x13, 0x80, 0x6b, 0x5d, 0x34, 0x08, 0xe5, 0xfd, 0x41, 0xc4, 0xee, 0x10, 0x44, 0x59, 0x9d, 0xaf,
	0xe7, 0x3c, 0x15, 0xbf, 0xab, 0xc8, 0xbf, 0x0f, 0x3d, 0x02, 0xbd, 0x6a, 0x96, 0x5a, 0x6d, 0xab,
	0x65, 0xe2, 0xd3, 0x7a, 0xa3, 0x66, 0xb5, 0xbf, 0x3f, 0x36, 0xad, 0x7a, 0xe3, 0xb4, 0x74, 0x54,
	0xaf, 0xa8, 0xf7, 0xd0, 0x43, 0xd8, 0x5b, 0xa2, 0x6f, 0x36, 0x8e, 0xea, 0x0d, 0x53, 0x55, 0xd0,
	0x3e, 0x68, 0x4b, 0xd4, 0xe5, 0x52, 0xfb, 0xe5, 0x2b, 0x35, 0x96, 0x7f, 0x0a, 0x6b, 0xf2, 0xe5,
	0xd1, 0x36, 0xa8, 0x87, 0xcd, 0xf2, 0xfc, 0xe9, 0x1f, 0xc3, 0xfd, 0xa9, 0xb4, 0xd2, 0x7c, 0xd3,
	0x38, 0x6a, 0x96, 0x2a, 0xaa, 0x92, 0x3f, 0x83, 0xe4, 0x34, 0x07, 0xd0, 0x0e, 0xa0, 0x00, 0xd3,
	0x6a, 0x97, 0xda, 0x27, 0xad, 0x19, 0xdb, 0xa8, 0xfc, 0xd8, 0x6c, 0x54, 0xea, 0x8d, 0x9a, 0xaa,
	0xcc, 0xc9, 0xf1, 0x49, 0xa3, 0x11, 0xc8, 0x63, 0x68, 0x0b, 0x36, 0x67, 0xe4, 0x95, 0x66, 0xc3,
	0x54, 0xe3, 0xf9, 0xe7, 0x00, 0xd7, 0xf4, 0xa1, 0x5d, 0xd8, 0xaa, 0x94, 0xda, 0x25, 0xab, 0xda,
	0xc4, 0xaf, 0x4b, 0xed, 0x19, 0x5f, 0xdb, 0xa0, 0xce, 0x2a, 0x4a, 0xa7, 0xb8, 0xa9, 0x2a, 0xc5,
	0x9f, 0xe3, 0x90, 0x8e, 0x0e, 0x50, 0x68, 0x00, 0x5b, 0x4b, 0x46, 0x16, 0xf4, 0xd9, 0x62, 0xff,
	0xb9, 0x61, 0xea, 0xd1, 0xf3, 0xb7, 0x81, 0xca, 0x92, 0x75, 0xe0, 0xfe, 0x42, 0x27, 0x43, 0x07,
	0xb7, 0xfc, 0x6d, 0xe9, 0xb9, 0xdb, 0x36, 0x45, 0xd4, 0x05, 0x75, 0xbe, 0x4b, 0xa1, 0x4f, 0x17,
	0xad, 0x97, 0xfd, 0x93, 0xf4, 0x83, 0x0f, 0xe2, 0xa4, 0x13, 0x13, 0x12, 0x61, 0x47, 0x42, 0xfb,
	0x8b, 0x26, 0xd7, 0xfd, 0x4d, 0x7f, 0x78, 0x83, 0x36, 0x3c, 0xa6, 0xdc, 0x86, 0xe8, 0xf8, 0x5a,
	0xde, 0x94, 0xcc, 0x95, 0x8e, 0xeb, 0xc7, 0xc1, 0x14, 0xf0, 0x43, 0xb1, 0xef, 0xf2, 0xb3, 0x71,
	0xc7, 0xe8, 0xd2, 0x61, 0xa1, 0x4f, 0xcf, 0xc9, 0x45, 0x41, 0xce, 0xc4, 0xbd, 0x8b, 0x42, 0x9f,
	0x86, 0x53, 0x2c, 0x2b, 0x44, 0xe6, 0xe4, 0x4e, 0x42, 0x48, 0x9f, 0xfc, 0x13, 0x00, 0x00, 0xff,
	0xff, 0xb8, 0x72, 0x65, 0xdc, 0x3f, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServingServiceClient is the client API for ServingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServingServiceClient interface {
	// Get information about this Feast serving.
	GetFeastServingInfo(ctx context.Context, in *GetFeastServingInfoRequest, opts ...grpc.CallOption) (*GetFeastServingInfoResponse, error)
	// Get online features synchronously.
	GetOnlineFeatures(ctx context.Context, in *GetOnlineFeaturesRequest, opts ...grpc.CallOption) (*GetOnlineFeaturesResponse, error)
	// Get batch features asynchronously.
	//
	// The client should check the status of the returned job periodically by
	// calling ReloadJob to determine if the job has completed successfully
	// or with an error. If the job completes successfully i.e.
	// status = JOB_STATUS_DONE with no error, then the client can check
	// the file_uris for the location to download feature values data.
	// The client is assumed to have access to these file URIs.
	GetBatchFeatures(ctx context.Context, in *GetBatchFeaturesRequest, opts ...grpc.CallOption) (*GetBatchFeaturesResponse, error)
	// Get the latest job status for batch feature retrieval.
	GetJob(ctx context.Context, in *GetJobRequest, opts ...grpc.CallOption) (*GetJobResponse, error)
}

type servingServiceClient struct {
	cc *grpc.ClientConn
}

func NewServingServiceClient(cc *grpc.ClientConn) ServingServiceClient {
	return &servingServiceClient{cc}
}

func (c *servingServiceClient) GetFeastServingInfo(ctx context.Context, in *GetFeastServingInfoRequest, opts ...grpc.CallOption) (*GetFeastServingInfoResponse, error) {
	out := new(GetFeastServingInfoResponse)
	err := c.cc.Invoke(ctx, "/feast.serving.ServingService/GetFeastServingInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servingServiceClient) GetOnlineFeatures(ctx context.Context, in *GetOnlineFeaturesRequest, opts ...grpc.CallOption) (*GetOnlineFeaturesResponse, error) {
	out := new(GetOnlineFeaturesResponse)
	err := c.cc.Invoke(ctx, "/feast.serving.ServingService/GetOnlineFeatures", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servingServiceClient) GetBatchFeatures(ctx context.Context, in *GetBatchFeaturesRequest, opts ...grpc.CallOption) (*GetBatchFeaturesResponse, error) {
	out := new(GetBatchFeaturesResponse)
	err := c.cc.Invoke(ctx, "/feast.serving.ServingService/GetBatchFeatures", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servingServiceClient) GetJob(ctx context.Context, in *GetJobRequest, opts ...grpc.CallOption) (*GetJobResponse, error) {
	out := new(GetJobResponse)
	err := c.cc.Invoke(ctx, "/feast.serving.ServingService/GetJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServingServiceServer is the server API for ServingService service.
type ServingServiceServer interface {
	// Get information about this Feast serving.
	GetFeastServingInfo(context.Context, *GetFeastServingInfoRequest) (*GetFeastServingInfoResponse, error)
	// Get online features synchronously.
	GetOnlineFeatures(context.Context, *GetOnlineFeaturesRequest) (*GetOnlineFeaturesResponse, error)
	// Get batch features asynchronously.
	//
	// The client should check the status of the returned job periodically by
	// calling ReloadJob to determine if the job has completed successfully
	// or with an error. If the job completes successfully i.e.
	// status = JOB_STATUS_DONE with no error, then the client can check
	// the file_uris for the location to download feature values data.
	// The client is assumed to have access to these file URIs.
	GetBatchFeatures(context.Context, *GetBatchFeaturesRequest) (*GetBatchFeaturesResponse, error)
	// Get the latest job status for batch feature retrieval.
	GetJob(context.Context, *GetJobRequest) (*GetJobResponse, error)
}

// UnimplementedServingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedServingServiceServer struct {
}

func (*UnimplementedServingServiceServer) GetFeastServingInfo(ctx context.Context, req *GetFeastServingInfoRequest) (*GetFeastServingInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFeastServingInfo not implemented")
}
func (*UnimplementedServingServiceServer) GetOnlineFeatures(ctx context.Context, req *GetOnlineFeaturesRequest) (*GetOnlineFeaturesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOnlineFeatures not implemented")
}
func (*UnimplementedServingServiceServer) GetBatchFeatures(ctx context.Context, req *GetBatchFeaturesRequest) (*GetBatchFeaturesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBatchFeatures not implemented")
}
func (*UnimplementedServingServiceServer) GetJob(ctx context.Context, req *GetJobRequest) (*GetJobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJob not implemented")
}

func RegisterServingServiceServer(s *grpc.Server, srv ServingServiceServer) {
	s.RegisterService(&_ServingService_serviceDesc, srv)
}

func _ServingService_GetFeastServingInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFeastServingInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServingServiceServer).GetFeastServingInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feast.serving.ServingService/GetFeastServingInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServingServiceServer).GetFeastServingInfo(ctx, req.(*GetFeastServingInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServingService_GetOnlineFeatures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOnlineFeaturesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServingServiceServer).GetOnlineFeatures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feast.serving.ServingService/GetOnlineFeatures",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServingServiceServer).GetOnlineFeatures(ctx, req.(*GetOnlineFeaturesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServingService_GetBatchFeatures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBatchFeaturesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServingServiceServer).GetBatchFeatures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feast.serving.ServingService/GetBatchFeatures",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServingServiceServer).GetBatchFeatures(ctx, req.(*GetBatchFeaturesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServingService_GetJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServingServiceServer).GetJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feast.serving.ServingService/GetJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServingServiceServer).GetJob(ctx, req.(*GetJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "feast.serving.ServingService",
	HandlerType: (*ServingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFeastServingInfo",
			Handler:    _ServingService_GetFeastServingInfo_Handler,
		},
		{
			MethodName: "GetOnlineFeatures",
			Handler:    _ServingService_GetOnlineFeatures_Handler,
		},
		{
			MethodName: "GetBatchFeatures",
			Handler:    _ServingService_GetBatchFeatures_Handler,
		},
		{
			MethodName: "GetJob",
			Handler:    _ServingService_GetJob_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "feast/serving/ServingService.proto",
}
