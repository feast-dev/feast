---
core:
  image:
    pullPolicy: IfNotPresent
    registry: gcr.io/kf-feast
    repository: feast-core
    tag: "${docker_tag}"
  replicaCount: 1
  resources:
    limits:
      cpu: 4
      memory: 8G
    requests:
      cpu: 1
      memory: 4G
  rollingUpdate:
    maxSurge: 2
    maxUnavailable: 0
  service:
    grpc:
      port: 6565
      targetPort: 6565
    http:
      port: 80
      targetPort: 8080
  jobs:
    workspace: "${workspace}"
    runner: "${job_runner}"
    options: ${job_runner_options}
    monitoring:
      period: 5000
      initialDelay: 60000
  trainingDatasetPrefix: "fs"
  projectId: "kf-feast"
  logType: JSON
dataflow:
  projectID: "${project_id}"
  location: "${region}"

postgresql:
  name: feast-metadata
  service:
    port: 5432
  postgresPassword: password
    
postgresql: 
  provision: true
  imageTag: 9.6.11
  service: 
    port: 5432
    
redis:
  name: feast-redis
  provision: true
  master:
    service:
      type: LoadBalancer
      annotations:
        "cloud.google.com/load-balancer-type": "Internal"
  usePassword: false

serving:
  config:
    maxEntityPerBatch: 2000
    maxNumberOfThread: 1024
    redisPool:
      maxIdle: 16
      maxSize: 1024
    timeout: 1
  image:
    pullPolicy: IfNotPresent
    registry: gcr.io/kf-feast
    repository: feast-serving
    tag: "${docker_tag}"
  jaeger:
    enabled: false
  replicaCount: 1
  resources:
    limits:
      cpu: 4
      memory: 8G
    requests:
      cpu: 2
      memory: 2G
  rollingUpdate:
    maxSurge: 2
    maxUnavailable: 0
  service:
    grpc:
      port: 6566
      targetPort: 6566
    http:
      port: 80
      targetPort: 8080

store:
 errors:
   type: "file.json"
   options: ${store_error_option}
 warehouse:
   type: "bigquery"
   options: ${store_warehouse_option}
 serving:
   type: "redis"
   options: ${store_serving_option}