feast:
  # GRPC service address for Feast Core
  # Feast Serving requires connection to Feast Core to retrieve and reload Feast metadata (e.g. FeatureSpecs, Store information)
  core-host: ${FEAST_CORE_HOST:localhost}
  core-grpc-port: ${FEAST_CORE_GRPC_PORT:6565}

  tracing:
    # If true, Feast will provide tracing data (using OpenTracing API) for various RPC method calls
    # which can be useful to debug performance issues and perform benchmarking
    enabled: false
    # Only Jaeger tracer is supported currently
    # https://opentracing.io/docs/supported-tracers/
    tracer-name: jaeger
    # The service name identifier for the tracing data
    service-name: feast_serving

  store:
    name: serving
    type: REDIS # Alternative, BIGQUERY
    redis_config:
      host: localhost
      port: 6379
    bigquery_config:
      # GCP Project
      project_id: my_project

      # BigQuery Dataset Id
      dataset_id: my_dataset

      # staging-location specifies the URI to store intermediate files for batch serving.
      # Feast Serving client is expected to have read access to this staging location
      # to download the batch features.
      # For example: gs://mybucket/myprefix
      # Please omit the trailing slash in the URI.
      staging-location: ${FEAST_JOB_STAGING_LOCATION:}

      # Retry options for BigQuery retrieval jobs
      bigquery-initial-retry-delay-secs: 1

      # BigQuery timeout for retrieval jobs
      bigquery-total-timeout-secs: 21600
    subscriptions:
      - name: "*"
        project: "*"
        version: "*"

  job_store:
    redis_host: localhost
    redis_port: 6379

grpc:
  # The port number Feast Serving GRPC service should listen on
  # It is set default to 6566 so it does not conflict with the GRPC server on Feast Core
  # which defaults to port 6565
  port: ${GRPC_PORT:6566}
  # This allows client to discover GRPC endpoints easily
  # https://github.com/grpc/grpc-java/blob/master/documentation/server-reflection-tutorial.md
  enable-reflection: ${GRPC_ENABLE_REFLECTION:true}

server:
  # The port number on which the Tomcat webserver that serves REST API endpoints should listen
  # It is set by default to 8081 so it does not conflict with Tomcat webserver on Feast Core
  # if both Feast Core and Serving are running on the same machine
  port: ${SERVER_PORT:8081}