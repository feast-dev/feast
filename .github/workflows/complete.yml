name: complete

on: [push, pull_request]

jobs:
  build-push-docker-images:
    runs-on: [self-hosted]
    strategy:
      matrix:
        component: [core, serving, jobcontroller, jupyter]
    env:
      GITHUB_PR_SHA: ${{ github.event.pull_request.head.sha }}
      REGISTRY: gcr.io/kf-feast
      MAVEN_CACHE: gs://feast-templocation-kf-feast/.m2.2020-08-19.tar
    steps:
      - uses: actions/checkout@v2
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          export_default_credentials: true
      - run: gcloud auth configure-docker --quiet
      - name: Get m2 cache
        run: |
          infra/scripts/download-maven-cache.sh \
          --archive-uri ${MAVEN_CACHE} \
          --output-dir .
      - name: Build image
        run: make build-${{ matrix.component }}-docker REGISTRY=${REGISTRY} VERSION=${GITHUB_SHA}
      - name: Push image
        run: |
          docker push ${REGISTRY}/feast-${{ matrix.component }}:${GITHUB_SHA}
          if [ -n "${GITHUB_PR_SHA}" ]; then
            docker tag ${REGISTRY}/feast-${{ matrix.component }}:${GITHUB_SHA} gcr.io/kf-feast/feast-${{ matrix.component }}:${GITHUB_PR_SHA}
            docker push ${REGISTRY}/feast-${{ matrix.component }}:${GITHUB_PR_SHA}
          fi

  lint-java:
    container: gcr.io/kf-feast/feast-ci:latest
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Lint java
        run: make lint-java

  lint-python:
    container: gcr.io/kf-feast/feast-ci:latest
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: make install-python-ci-dependencies
      - name: Compile protos
        run: make compile-protos-python
      - name: Lint python
        run: make lint-python

  lint-go:
    container: gcr.io/kf-feast/feast-ci:latest
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: make install-go-ci-dependencies
      - name: Lint go
        run: make lint-go

  lint-versions:
    container: gcr.io/kf-feast/feast-ci:latest
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Lint versions throughout repo
        run: make lint-versions

  unit-test-java:
    runs-on: ubuntu-latest
    needs: lint-java
    container: gcr.io/kf-feast/feast-ci:latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Test java
        run: make test-java-with-coverage
      - uses: actions/upload-artifact@v2
        with:
          name: java-coverage-report
          path: ${{ github.workspace }}/docs/coverage/java/target/site/jacoco-aggregate/

  unit-test-python:
    runs-on: ubuntu-latest
    needs: lint-python
    container: gcr.io/kf-feast/feast-ci:latest
    steps:
      - uses: actions/checkout@v2
      - name: Install python
        run: make install-python
      - name: Test python
        run: make test-python

  unit-test-go:
    runs-on: ubuntu-latest
    needs: lint-go
    container: gcr.io/kf-feast/feast-ci:latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: make compile-protos-go
      - name: Test go
        run: make test-go

  integration-test:
    runs-on: ubuntu-latest
    needs: unit-test-java
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          java-package: jdk
          architecture: x64
      - name: Run integration tests
        run:  make test-java-integration

  tests-docker-compose:
    needs:
    - build-push-docker-images
    - publish-ingestion-jar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Test docker compose
        run: ./infra/scripts/test-docker-compose.sh ${GITHUB_SHA}

  publish-ingestion-jar:
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@v2
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          export_default_credentials: true
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - uses: stCarolas/setup-maven@v3
        with:
          maven-version: 3.6.3
      - name: build-jar
        run: make build-java-no-tests REVISION=${GITHUB_SHA}
      - name: copy to gs
        run: gsutil cp ./spark/ingestion/target/feast-ingestion-spark-${GITHUB_SHA}.jar gs://feast-jobs/spark/ingestion/

