name: complete workflow

on: [push, pull_request]

jobs:
  build-push-docker-images:
    runs-on: [self-hosted, builder]
    strategy:
      matrix:
        component: [core, serving]
    env:
      GITHUB_PR_SHA: ${{ github.event.pull_request.head.sha }}
      REGISTRY: gcr.io/kf-feast
    steps:
      - uses: actions/checkout@v2
      - name: build image
        run: make build-${{ matrix.component }}-docker REGISTRY=${REGISTRY} VERSION=${GITHUB_SHA}
      - name: push image
        run: |
          docker push ${REGISTRY}/feast-${{ matrix.component }}:${GITHUB_SHA}
          if [ -n "${GITHUB_PR_SHA}" ]; then
            docker tag ${REGISTRY}/feast-${{ matrix.component }}:${GITHUB_SHA} gcr.io/kf-feast/feast-${{ matrix.component }}:${GITHUB_PR_SHA}
            docker push ${REGISTRY}/feast-${{ matrix.component }}:${GITHUB_PR_SHA}
          fi

  lint-java:
    container: gcr.io/kf-feast/feast-ci:latest
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - name: lint java
        run: make lint-java

  lint-python:
    container: gcr.io/kf-feast/feast-ci:latest
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - name: install dependencies
        run: make install-python-ci-dependencies
      - name: compile protos
        run: make compile-protos-python
      - name: lint python
        run: make lint-python

  lint-go:
    container: gcr.io/kf-feast/feast-ci:latest
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - name: install dependencies
        run: make install-go-ci-dependencies
      - name: lint go
        run: make lint-go

  lint-versions:
    container: gcr.io/kf-feast/feast-ci:latest
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - name: install dependencies
        run: make lint-versions

  unit-test-java:
    runs-on: ubuntu-latest
    container: gcr.io/kf-feast/feast-ci:latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: test java
        run: make test-java-with-coverage
      - uses: actions/upload-artifact@v2
        with:
          name: java-coverage-report
          path: ${{ github.workspace }}/docs/coverage/java/target/site/jacoco-aggregate/

  unit-test-python:
    runs-on: ubuntu-latest
    container: gcr.io/kf-feast/feast-ci:latest
    steps:
      - uses: actions/checkout@v2
      - name: install python
        run: make install-python
      - name: test python
        run: make test-python

  unit-test-go:
    runs-on: ubuntu-latest
    container: gcr.io/kf-feast/feast-ci:latest
    steps:
      - uses: actions/checkout@v2
      - name: install dependencies
        run: make compile-protos-go
      - name: test go
        run: make test-go

  integration-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          java-package: jdk
          architecture: x64
      - name: Run integration tests
        run:  make test-java-integration

  load-test:
    runs-on: [self-hosted, load]
    needs: build-push-docker-images
    steps:
      - uses: actions/checkout@v2
      - name: Run load test
        run:  make test-load GIT_SHA=${GITHUB_SHA}
      - uses: actions/upload-artifact@v2
        with:
          name: load-test-results
          path: load-test-output/