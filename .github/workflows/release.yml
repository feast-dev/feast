name: release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  get-version:
    runs-on:  ubuntu-latest
    outputs:
      release_version: ${{ steps.get_release_version.outputs.release_version }}
      version_without_prefix: ${{ steps.get_release_version_without_prefix.outputs.version_without_prefix }}
      highest_semver_tag: ${{ steps.get_highest_semver.outputs.highest_semver_tag }}
    steps:
    - uses: actions/checkout@v2
    - name: Get release version
      id: get_release_version
      run: echo ::set-output name=release_version::${GITHUB_REF#refs/*/}
    - name: Get release version without prefix
      id: get_release_version_without_prefix
      env:
        RELEASE_VERSION: ${{ steps.get_release_version.outputs.release_version }}
      run: |
        echo ::set-output name=version_without_prefix::${RELEASE_VERSION:1}
    - name: Get highest semver
      id: get_highest_semver
      env:
        RELEASE_VERSION: ${{ steps.get_release_version.outputs.release_version }}
      run: |
        source infra/scripts/setup-common-functions.sh
        SEMVER_REGEX='^v[0-9]+\.[0-9]+\.[0-9]+(-([0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*))?$'
        if echo "${RELEASE_VERSION}" | grep -P "$SEMVER_REGEX" &>/dev/null ; then
          echo ::set-output name=highest_semver_tag::$(get_tag_release -m)
        fi
    - name: Check output
      env:
        RELEASE_VERSION: ${{ steps.get_release_version.outputs.release_version }}
        VERSION_WITHOUT_PREFIX: ${{ steps.get_release_version_without_prefix.outputs.version_without_prefix }}
        HIGHEST_SEMVER_TAG: ${{ steps.get_highest_semver.outputs.highest_semver_tag }}
      run: |
        echo $RELEASE_VERSION
        echo $VERSION_WITHOUT_PREFIX
        echo $HIGHEST_SEMVER_TAG

  publish-python-sdk:
    runs-on: ubuntu-latest
    env:
      TWINE_USERNAME: __token__
      TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          architecture: 'x64'
      - name: Publish Python Package
        run: |
          make install-python-ci-dependencies && package-protos && make compile-protos-python
          cd sdk/python/
          python3 -m pip install --user --upgrade setuptools wheel twine
          python3 setup.py sdist bdist_wheel
          python3 -m twine upload --verbose dist/*
