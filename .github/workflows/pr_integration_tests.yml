name: pr-integration-tests

on: [push, pull_request]


# concurrency is currently broken, see details https://github.com/actions/runner/issues/1532
#concurrency:
#  group: pr-integration-tests-${{ github.event.pull_request.number }}
#  cancel-in-progress: true

jobs:
  integration-test-python:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.7 ]
        os: [ ubuntu-latest ]
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
        with:
          # pull_request_target runs the workflow in the context of the base repo
          # as such actions/checkout needs to be explicit configured to retrieve
          # code from the PR.
          ref: refs/pull/3/merge
          submodules: recursive
      - name: Start Redis
        uses: supercharge/redis-github-action@1.4.0
        with:
          redis-version: ${{ matrix.redis-version }}
          redis-port: 12345
      - name: Setup Python
        uses: actions/setup-python@v2
        id: setup-python
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
        run: |
          pip install --upgrade "pip>=21.3.1"
      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: pip cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.pip-cache.outputs.dir }}
            /opt/hostedtoolcache/Python
            /Users/runner/hostedtoolcache/Python
          key: ${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-pip-${{ hashFiles(format('**/py{0}-ci-requirements.txt', env.PYTHON)) }}
          restore-keys: |
            ${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-pip-
      - name: Install pip-tools
        run: pip install pip-tools
      - name: Install dependencies
        run: make install-python-ci-dependencies
      - name: Setup Redis Cluster
        run: |
          docker pull vishnunair/docker-redis-cluster:latest
          docker run -d -p 32001:6380 -p 32002:6381 -p 32003:6382 -p 32004:6383 -p 32005:6384 -p 32006:6385 --name redis-cluster vishnunair/docker-redis-cluster
      - name: Test python
        # if: ${{ always() }}  # this will guarantee that step won't be canceled and resources won't leak
        # env:
        #   FEAST_SERVER_DOCKER_IMAGE_TAG: ${{ needs.build-docker-image.outputs.DOCKER_IMAGE_TAG }}
        #   FEAST_USAGE: "False"
        #   IS_TEST: "True"
        #   SNOWFLAKE_CI_DEPLOYMENT: ${{ secrets.SNOWFLAKE_CI_DEPLOYMENT }}
        #   SNOWFLAKE_CI_USER: ${{ secrets.SNOWFLAKE_CI_USER }}
        #   SNOWFLAKE_CI_PASSWORD: ${{ secrets.SNOWFLAKE_CI_PASSWORD }}
        #   SNOWFLAKE_CI_ROLE: ${{ secrets.SNOWFLAKE_CI_ROLE }}
        #   SNOWFLAKE_CI_WAREHOUSE: ${{ secrets.SNOWFLAKE_CI_WAREHOUSE }}
        run: pytest -n 8 --cov=./ --cov-report=xml --verbose --color=yes sdk/python/tests/integration/registration/test_cli.py::test_universal_cli --integration --universal --durations=5
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v1
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files: ./coverage.xml
      #     flags: integrationtests
      #     env_vars: OS,PYTHON
      #     fail_ci_if_error: true
      #     verbose: true
