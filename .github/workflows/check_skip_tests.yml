name: Check if Tests should be Skipped

on:
  workflow_call:
    inputs:
      head-sha:
        required: true
        type: string
      excluded-dirs:
        required: false
        type: string
        default: 'docs/**,community/**,examples/**'

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      skip_tests: ${{ steps.check_skip_tests.outputs.skip_tests }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.head-sha }}

      - name: Fetch base branch
        run: |
          git fetch origin ${{ github.base_ref }}:$GITHUB_REF_BASE
        env:
          GITHUB_REF_BASE: refs/remotes/origin/${{ github.base_ref }}

      - name: Set excluded dirs
        id: set_excluded_dirs
        run: |
          EXCLUDED_DIRS="${{ inputs.excluded-dirs }}"
          IFS=',' read -r -a EXCLUDED_DIRS_ARRAY <<< "$EXCLUDED_DIRS"
          echo "Excluded directories: ${EXCLUDED_DIRS_ARRAY[@]}"
          echo "EXCLUDED_DIRS_ARRAY=${EXCLUDED_DIRS_ARRAY[@]}" >> $GITHUB_ENV

      - name: Check for excluded directory changes
        id: check_skip_tests
        run: |
          CHANGED_FILES=$(git diff --name-only $GITHUB_REF_BASE ${{ inputs.head-sha }})
          echo "Changed files:"
          echo "$CHANGED_FILES"

          # Build a regex pattern from the excluded directories
          EXCLUDE_PATTERN=$(IFS='|'; echo "${EXCLUDED_DIRS_ARRAY[*]}")
          NON_EXCLUDED_CHANGED=$(echo "$CHANGED_FILES" | grep -Ev "^($EXCLUDE_PATTERN)" || true)

          if [[ -z "$NON_EXCLUDED_CHANGED" ]]; then
            echo "skip_tests=true" >> "$GITHUB_ENV"
            echo "::set-output name=skip_tests::true"
          else
            echo "skip_tests=false" >> "$GITHUB_ENV"
            echo "::set-output name=skip_tests::false"
          fi