--- 
core:
  projectId: "gcp-project-id"
  image: 
    pullPolicy: IfNotPresent
    registry: feast
    repository: feast-core
    tag: "0.1.0"
  replicaCount: 3
  resources: 
    limits: 
      cpu: 8
      memory: 8G
    requests: 
      cpu: 2
      memory: 4G
  rollingUpdate: 
    maxSurge: 2
    maxUnavailable: 0
  service: 
    grpc: 
      port: 6565
      targetPort: 6565
    http: 
      port: 80
      targetPort: 8080
  jobs: 
    runner: DirectRunner
    options: "{}"
    errorsStoreType: "stdout"
    errorStoreOptions: "{}"
    monitoring:
      period: 5000
      initialDelay: 60000
  trainingDatasetPrefix: "fs"

postgresql: 
  name: feast-metadata
  imageTag: 9.6
  postgresPassword: password
  service: 
    port: 5432
provisionDataStore: 
  postgres: true

serving: 
  config: 
    maxEntityPerBatch: 2000
    maxNumberOfThread: 128
    redisPool: 
      maxIdle: 16
      maxSize: 128
    timeout: 5
  image: 
    pullPolicy: IfNotPresent
    registry: feast
    repository: feast-serving
    tag: "0.1.0"
  replicaCount: 4
  resources: 
    limits: 
      cpu: 2
      memory: 4G
    requests: 
      cpu: 1
      memory: 2G
  rollingUpdate: 
    maxSurge: 2
    maxUnavailable: 0
  service: 
    grpc: 
      port: 6565
      targetPort: 6565
    http: 
      port: 80
      targetPort: 8080
  jaeger:
    enabled: false

# Enable only if you have an existing service account you 
# want to mount the secret of.
# serviceAccount:
#   name: feast-service-account
#   key: feast-service-account-key

statsd:
  host: "localhost"
  port: 8125
