apiVersion: v1
kind: ServiceAccount
metadata:
  name: feast-admin-sa
  namespace: feast-dev
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: feast-admin-role
  namespace: feast-dev
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: feast-admin-rolebinding
  namespace: feast-dev
subjects:
  - kind: ServiceAccount
    name: feast-admin-sa
    namespace: feast-dev
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: feast-admin-role
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client-admin-deployment
  namespace: feast-dev
  labels:
    app: client-admin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: client-admin
  template:
    metadata:
      labels:
        app: client-admin
    spec:
      serviceAccountName: feast-admin-sa
      initContainers:
        - name: init-client-admin
          image: quay.io/ahameed/feature-server:dev
          imagePullPolicy: Always
          command: ["python", "/app/feature_repo/test_admin.py"]
          volumeMounts:
          - name: client-feature-repo-config
            mountPath: /app/feature_repo
      containers:
        - name: client-admin-container
          image: quay.io/ahameed/feature-server:dev
          imagePullPolicy: Always
          command: ["sleep", "infinity"]
          volumeMounts:
            - name: client-feature-repo-config
              mountPath: /app/feature_repo
      volumes:
        - name: client-feature-repo-config
          configMap:
            name: client-feature-repo-config
