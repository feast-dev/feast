global: 
  postgresql: {}

replicaCount: 1

# nameOverride: ""
# fullnameOverride: ""

image:
  registry: gcr.io/kf-feast
  repository: feast-core
  tag: 0.3.0
  pullPolicy: IfNotPresent

jobs:
  runner: DirectRunner
  options: {}
    ## If using DataflowRunner, the following options are necessary:
    # project: my-gcp-project
    # tempLocation: gs://my-feast-bucket/temp
    # region: us-central1
    # subnetwork: default
  metrics:
    enabled: false
    ## Type of metrics sink. Only prometheus is currently supported.
    # type: prometheus
    ## Host of the metrics sink. In the case of prometheus, this is the host of the prometheus
    ## pushGateway to sink metrics to.
    # host: localhost
    ## Port of the metrics sink. In the case of prometheus, this is the port of the prometheus
    ## pushGateway to sink metrics to.
    # port: 9091

stream:
  type: kafka
  options:
    bootstrapServers: kafka:9092
    replicationFactor: 2
    partitions: 4

service:
  # annotations: []
  http:
    port: 80
    targetPort: 8080
  grpc:
    port: 6565
    targetPort: 6565
  type: ClusterIP
  # loadBalancerIP:  
  # loadBalancerSourceRanges:
    # - 10.0.0.0/8
  port: 80

rollingUpdate:
  maxSurge: 2
  maxUnavailable: 1

livenessProbe:
  enabled: false
  # initialDelaySeconds: 30
  # failureThreshold: 3
readinessProbe:
  initialDelaySeconds: 30
  failureThreshold: 3

## A service account if using the dataflow runner or BigQuery.
# serviceAccount:
  # name: my-service-account

postgresql:
  # provision a postgres instance for feast metadata
  provision: false
  ## These opts will have to be set regardless of whether you use helm to provision the
  ## postgres instance. If using an existing postgres instance, they should contain the
  ## credentials necessary to connect to that instance.
  postgresqlUsername: postgres
  # existingSecret: postgresql-password
  ## If unset, feast will default to some postgres instance in the same namespace as the
  ## feast core deployment.
  # host:
  postgresqlDatabase: postgres

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
  hosts:
    # - host: chart-example.local
      # port: http

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

