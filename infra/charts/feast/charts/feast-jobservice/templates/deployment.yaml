apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "feast-jobservice.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "feast-jobservice.name" . }}
    component: jobservice
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "feast-jobservice.name" . }}
      component: jobservice
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
      {{- if .Values.sparkOperator.enabled }}
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- end }}
      {{- if .Values.prometheus.enabled }}
        prometheus.io/path: /metrics
        prometheus.io/port: "{{ .Values.service.http.targetPort }}"
        prometheus.io/scrape: "true"
      {{- end }}
      labels:
        app: {{ template "feast-jobservice.name" . }}
        component: jobservice
        release: {{ .Release.Name }}
      {{- if .Values.podLabels }}
        {{ toYaml .Values.podLabels | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- if or .Values.secrets .Values.sparkOperator.enabled }}
      volumes:
      {{- end }}
      {{- range $secret := .Values.secrets }}
      - name: {{ $secret }}
        secret:
          secretName: {{ $secret }}
      {{- end }}
      {{- if .Values.sparkOperator.enabled }}
      - name: {{ template "feast-jobservice.fullname" . }}-spark-template
        configMap:
          name: {{ template "feast-jobservice.fullname" . }}-spark-template
      {{- end }}

      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}

        {{- if or .Values.secrets .Values.sparkOperator.enabled }}
        volumeMounts:
        {{- end }}
        {{- range $secret := .Values.secrets }}
        - name: {{ $secret }}
          mountPath: "/etc/secrets/{{ $secret }}"
          readOnly: true
        {{- end }}
        {{- if .Values.sparkOperator.enabled }}
        - name: {{ template "feast-jobservice.fullname" . }}-spark-template
          mountPath: "/etc/configs"
        {{- end }}

        env:
        {{- if .Values.sparkOperator.enabled }}
        - name: FEAST_SPARK_K8S_JOB_TEMPLATE_PATH
          value: /etc/configs/jobTemplate.yaml
        {{- end }}
        {{- range $key, $value := .Values.envOverrides }}
        - name: {{ printf "%s" $key | replace "." "_" | upper | quote }}
          {{- if eq (kindOf $value) "map" }}
          valueFrom:
            {{- toYaml $value | nindent 12 }}
          {{- else }}
          value: {{ $value | quote }}
          {{- end }}
        {{- end }}

        ports:
        - name: http
          containerPort: {{ .Values.service.http.targetPort }}
        - name: grpc
          containerPort: {{ .Values.service.grpc.targetPort }}

        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          exec:
            command: ["/usr/bin/grpc-health-probe", "-addr=:{{ .Values.service.grpc.targetPort }}"]
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- end }}

        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          exec:
            command: ["/usr/bin/grpc-health-probe", "-addr=:{{ .Values.service.grpc.targetPort }}"]
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        {{- end }}

        resources:
          {{- toYaml .Values.resources | nindent 10 }}
