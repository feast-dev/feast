apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-stack
  namespace: feast
  labels:
    app: redis-stack
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-stack
  template:
    metadata:
      labels:
        app: redis-stack
    spec:
      containers:
      - name: redis-stack
        image: redis/redis-stack:latest
        ports:
        - containerPort: 6379
          name: redis
        - containerPort: 8001
          name: redis-insight
        env:
        - name: REDIS_ARGS
          value: "--loadmodule /opt/redis-stack/lib/redisearch.so --loadmodule /opt/redis-stack/lib/redisjson.so"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        volumeMounts:
        - name: redis-data
          mountPath: /data
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: redis-master
  namespace: feast
  labels:
    app: redis-stack
spec:
  selector:
    app: redis-stack
  ports:
  - port: 6379
    targetPort: 6379
    name: redis
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: redis-insight
  namespace: feast
  labels:
    app: redis-stack
spec:
  selector:
    app: redis-stack
  ports:
  - port: 8001
    targetPort: 8001
    name: redis-insight
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-data-pvc
  namespace: feast
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
