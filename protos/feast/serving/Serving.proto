/*
 * Copyright 2018 The Feast Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package feast.serving;

import "google/protobuf/timestamp.proto";
import "feast/types/Value.proto";

option java_package = "feast.serving";
option java_outer_classname = "ServingAPIProto";
option go_package = "github.com/gojek/feast/protos/generated/go/feast/serving";

service ServingAPI {
    // Query features from Feast serving storage
    rpc QueryFeatures (QueryFeaturesRequest) returns (QueryFeaturesResponse) {};
}

message QueryFeaturesRequest {
    // e.g. "driver", "customer", "city".
    string entityName = 1;
    // List of entity ID.
    repeated string entityId = 2;
    // List of feature ID.
    // feature ID is in the form of [entity_name].[feature_name]
    // e.g: "driver.day.total_accepted_booking"
    // all requested feature ID shall have same entity name.
    repeated string featureId = 3;
}

message QueryFeaturesResponse {
    // Entity name of the response
    string entityName = 1;
    // map of entity ID and its entity's properties.
    map<string, Entity> entities = 2;
}

message Entity {
    // map of feature ID and its feature value.
    map<string, FeatureValue> features = 1;
}

message FeatureValue {
    // value of feature
    feast.types.Value value = 1;
    // timestamp of the feature
    google.protobuf.Timestamp timestamp = 2;
}
