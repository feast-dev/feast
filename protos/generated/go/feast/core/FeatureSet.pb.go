// Code generated by protoc-gen-go. DO NOT EDIT.
// source: feast/core/FeatureSet.proto

package core // import "github.com/gojek/feast/protos/generated/go/feast/core"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import types "github.com/gojek/feast/protos/generated/go/feast/types"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FeatureSet struct {
	// Name of the featureSet. Must be unique.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// FeatureSet version.
	Version int32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	// Features contained within this featureSet.
	Features []*Feature `protobuf:"bytes,3,rep,name=features,proto3" json:"features,omitempty"`
	// Source on which feature rows can be found
	Source               *Source  `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeatureSet) Reset()         { *m = FeatureSet{} }
func (m *FeatureSet) String() string { return proto.CompactTextString(m) }
func (*FeatureSet) ProtoMessage()    {}
func (*FeatureSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_FeatureSet_d1f5eb656445faf6, []int{0}
}
func (m *FeatureSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeatureSet.Unmarshal(m, b)
}
func (m *FeatureSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeatureSet.Marshal(b, m, deterministic)
}
func (dst *FeatureSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeatureSet.Merge(dst, src)
}
func (m *FeatureSet) XXX_Size() int {
	return xxx_messageInfo_FeatureSet.Size(m)
}
func (m *FeatureSet) XXX_DiscardUnknown() {
	xxx_messageInfo_FeatureSet.DiscardUnknown(m)
}

var xxx_messageInfo_FeatureSet proto.InternalMessageInfo

func (m *FeatureSet) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FeatureSet) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *FeatureSet) GetFeatures() []*Feature {
	if m != nil {
		return m.Features
	}
	return nil
}

func (m *FeatureSet) GetSource() *Source {
	if m != nil {
		return m.Source
	}
	return nil
}

type Feature struct {
	// Name of the feature.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Value type of the feature.
	ValueType types.ValueType_Enum `protobuf:"varint,2,opt,name=valueType,proto3,enum=feast.types.ValueType_Enum" json:"valueType,omitempty"`
	// Describes whether a feature is also a key.
	// This allows the feature to be used during joins between feature sets.
	// If the featureSet is ingested into a store that supports keys, this value
	// will be made a key.
	IsKey                bool     `protobuf:"varint,3,opt,name=isKey,proto3" json:"isKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Feature) Reset()         { *m = Feature{} }
func (m *Feature) String() string { return proto.CompactTextString(m) }
func (*Feature) ProtoMessage()    {}
func (*Feature) Descriptor() ([]byte, []int) {
	return fileDescriptor_FeatureSet_d1f5eb656445faf6, []int{1}
}
func (m *Feature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Feature.Unmarshal(m, b)
}
func (m *Feature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Feature.Marshal(b, m, deterministic)
}
func (dst *Feature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Feature.Merge(dst, src)
}
func (m *Feature) XXX_Size() int {
	return xxx_messageInfo_Feature.Size(m)
}
func (m *Feature) XXX_DiscardUnknown() {
	xxx_messageInfo_Feature.DiscardUnknown(m)
}

var xxx_messageInfo_Feature proto.InternalMessageInfo

func (m *Feature) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Feature) GetValueType() types.ValueType_Enum {
	if m != nil {
		return m.ValueType
	}
	return types.ValueType_UNKNOWN
}

func (m *Feature) GetIsKey() bool {
	if m != nil {
		return m.IsKey
	}
	return false
}

func init() {
	proto.RegisterType((*FeatureSet)(nil), "feast.core.FeatureSet")
	proto.RegisterType((*Feature)(nil), "feast.core.Feature")
}

func init() {
	proto.RegisterFile("feast/core/FeatureSet.proto", fileDescriptor_FeatureSet_d1f5eb656445faf6)
}

var fileDescriptor_FeatureSet_d1f5eb656445faf6 = []byte{
	// 284 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x3f, 0x4f, 0xc3, 0x30,
	0x10, 0xc5, 0x65, 0xd2, 0xbf, 0x57, 0x09, 0x24, 0x83, 0x84, 0x45, 0x97, 0xa8, 0x53, 0xc4, 0x60,
	0x4b, 0x41, 0x0c, 0xac, 0x95, 0x60, 0x61, 0x41, 0x6e, 0xd5, 0x81, 0x2d, 0x0d, 0xd7, 0x10, 0x20,
	0x71, 0x64, 0x3b, 0x95, 0xf2, 0x49, 0xf8, 0xba, 0x28, 0x76, 0x42, 0x3a, 0x74, 0xf3, 0xe9, 0x3d,
	0xbf, 0x7b, 0xf7, 0x83, 0xe5, 0x01, 0x13, 0x63, 0x45, 0xaa, 0x34, 0x8a, 0x17, 0x4c, 0x6c, 0xad,
	0x71, 0x83, 0x96, 0x57, 0x5a, 0x59, 0x45, 0xc1, 0x89, 0xbc, 0x15, 0xef, 0x6e, 0xbd, 0xd1, 0x36,
	0x15, 0x1a, 0xb1, 0x4b, 0x7e, 0x6a, 0xf4, 0xa6, 0x5e, 0x70, 0x09, 0x1b, 0x55, 0xeb, 0xb4, 0x13,
	0x56, 0xbf, 0x04, 0x60, 0x88, 0xa4, 0x14, 0x46, 0x65, 0x52, 0x20, 0x23, 0x21, 0x89, 0xe6, 0xd2,
	0xbd, 0x29, 0x83, 0xe9, 0x11, 0xb5, 0xc9, 0x55, 0xc9, 0x2e, 0x42, 0x12, 0x8d, 0x65, 0x3f, 0x52,
	0x01, 0xb3, 0x83, 0xff, 0x6b, 0x58, 0x10, 0x06, 0xd1, 0x22, 0xbe, 0xe6, 0x43, 0x1b, 0xde, 0xe5,
	0xca, 0x7f, 0x13, 0xbd, 0x87, 0x89, 0x71, 0xdb, 0xd9, 0x28, 0x24, 0xd1, 0x22, 0xa6, 0xa7, 0x76,
	0xdf, 0x4b, 0x76, 0x8e, 0x55, 0x09, 0xd3, 0x2e, 0xe0, 0x6c, 0xab, 0x27, 0x98, 0x1f, 0xdb, 0x03,
	0xb7, 0x4d, 0x85, 0xae, 0xd7, 0x65, 0xbc, 0xec, 0xd2, 0xdc, 0xf9, 0x7c, 0xd7, 0xab, 0xfc, 0xb9,
	0xac, 0x0b, 0x39, 0xb8, 0xe9, 0x0d, 0x8c, 0x73, 0xf3, 0x8a, 0x0d, 0x0b, 0x42, 0x12, 0xcd, 0xa4,
	0x1f, 0xd6, 0x5b, 0x38, 0x21, 0xb9, 0xbe, 0x1a, 0xa0, 0xbc, 0xb5, 0xa0, 0xde, 0x1f, 0xb3, 0xdc,
	0x7e, 0xd6, 0x7b, 0x9e, 0xaa, 0x42, 0x64, 0xea, 0x0b, 0xbf, 0x85, 0x47, 0xea, 0x30, 0x1a, 0x91,
	0x61, 0x89, 0x3a, 0xb1, 0xf8, 0x21, 0x32, 0x25, 0x06, 0xd8, 0xfb, 0x89, 0xd3, 0x1f, 0xfe, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x54, 0xb4, 0x42, 0x25, 0xc3, 0x01, 0x00, 0x00,
}
