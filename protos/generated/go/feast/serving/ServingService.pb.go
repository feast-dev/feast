// Code generated by protoc-gen-go. DO NOT EDIT.
// source: feast/serving/ServingService.proto

package serving // import "github.com/gojek/feast/protos/generated/go/feast/serving"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import types "github.com/gojek/feast/protos/generated/go/feast/types"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type QueryFeaturesRequest struct {
	// e.g. "driver", "customer", "city".
	EntityName string `protobuf:"bytes,1,opt,name=entityName,proto3" json:"entityName,omitempty"`
	// List of entity ID.
	EntityId []string `protobuf:"bytes,2,rep,name=entityId,proto3" json:"entityId,omitempty"`
	// List of feature ID.
	// feature ID is in the form of [entity_name].[feature_name]
	// e.g: "driver.day.total_accepted_booking"
	// all requested feature ID shall have same entity name.
	FeatureId            []string `protobuf:"bytes,3,rep,name=featureId,proto3" json:"featureId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryFeaturesRequest) Reset()         { *m = QueryFeaturesRequest{} }
func (m *QueryFeaturesRequest) String() string { return proto.CompactTextString(m) }
func (*QueryFeaturesRequest) ProtoMessage()    {}
func (*QueryFeaturesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ServingService_09640b0db2e7d867, []int{0}
}
func (m *QueryFeaturesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryFeaturesRequest.Unmarshal(m, b)
}
func (m *QueryFeaturesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryFeaturesRequest.Marshal(b, m, deterministic)
}
func (dst *QueryFeaturesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryFeaturesRequest.Merge(dst, src)
}
func (m *QueryFeaturesRequest) XXX_Size() int {
	return xxx_messageInfo_QueryFeaturesRequest.Size(m)
}
func (m *QueryFeaturesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryFeaturesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryFeaturesRequest proto.InternalMessageInfo

func (m *QueryFeaturesRequest) GetEntityName() string {
	if m != nil {
		return m.EntityName
	}
	return ""
}

func (m *QueryFeaturesRequest) GetEntityId() []string {
	if m != nil {
		return m.EntityId
	}
	return nil
}

func (m *QueryFeaturesRequest) GetFeatureId() []string {
	if m != nil {
		return m.FeatureId
	}
	return nil
}

type QueryFeaturesResponse struct {
	// Entity name of the response
	EntityName string `protobuf:"bytes,1,opt,name=entityName,proto3" json:"entityName,omitempty"`
	// map of entity ID and its entity's properties.
	Entities             map[string]*Entity `protobuf:"bytes,2,rep,name=entities,proto3" json:"entities,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *QueryFeaturesResponse) Reset()         { *m = QueryFeaturesResponse{} }
func (m *QueryFeaturesResponse) String() string { return proto.CompactTextString(m) }
func (*QueryFeaturesResponse) ProtoMessage()    {}
func (*QueryFeaturesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ServingService_09640b0db2e7d867, []int{1}
}
func (m *QueryFeaturesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryFeaturesResponse.Unmarshal(m, b)
}
func (m *QueryFeaturesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryFeaturesResponse.Marshal(b, m, deterministic)
}
func (dst *QueryFeaturesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryFeaturesResponse.Merge(dst, src)
}
func (m *QueryFeaturesResponse) XXX_Size() int {
	return xxx_messageInfo_QueryFeaturesResponse.Size(m)
}
func (m *QueryFeaturesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryFeaturesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryFeaturesResponse proto.InternalMessageInfo

func (m *QueryFeaturesResponse) GetEntityName() string {
	if m != nil {
		return m.EntityName
	}
	return ""
}

func (m *QueryFeaturesResponse) GetEntities() map[string]*Entity {
	if m != nil {
		return m.Entities
	}
	return nil
}

type Entity struct {
	// map of feature ID and its feature value.
	Features             map[string]*FeatureValue `protobuf:"bytes,1,rep,name=features,proto3" json:"features,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Entity) Reset()         { *m = Entity{} }
func (m *Entity) String() string { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()    {}
func (*Entity) Descriptor() ([]byte, []int) {
	return fileDescriptor_ServingService_09640b0db2e7d867, []int{2}
}
func (m *Entity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entity.Unmarshal(m, b)
}
func (m *Entity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entity.Marshal(b, m, deterministic)
}
func (dst *Entity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entity.Merge(dst, src)
}
func (m *Entity) XXX_Size() int {
	return xxx_messageInfo_Entity.Size(m)
}
func (m *Entity) XXX_DiscardUnknown() {
	xxx_messageInfo_Entity.DiscardUnknown(m)
}

var xxx_messageInfo_Entity proto.InternalMessageInfo

func (m *Entity) GetFeatures() map[string]*FeatureValue {
	if m != nil {
		return m.Features
	}
	return nil
}

type FeatureValue struct {
	// value of feature
	Value *types.Value `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// timestamp of the feature
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FeatureValue) Reset()         { *m = FeatureValue{} }
func (m *FeatureValue) String() string { return proto.CompactTextString(m) }
func (*FeatureValue) ProtoMessage()    {}
func (*FeatureValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_ServingService_09640b0db2e7d867, []int{3}
}
func (m *FeatureValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeatureValue.Unmarshal(m, b)
}
func (m *FeatureValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeatureValue.Marshal(b, m, deterministic)
}
func (dst *FeatureValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeatureValue.Merge(dst, src)
}
func (m *FeatureValue) XXX_Size() int {
	return xxx_messageInfo_FeatureValue.Size(m)
}
func (m *FeatureValue) XXX_DiscardUnknown() {
	xxx_messageInfo_FeatureValue.DiscardUnknown(m)
}

var xxx_messageInfo_FeatureValue proto.InternalMessageInfo

func (m *FeatureValue) GetValue() *types.Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *FeatureValue) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func init() {
	proto.RegisterType((*QueryFeaturesRequest)(nil), "feast.serving.QueryFeaturesRequest")
	proto.RegisterType((*QueryFeaturesResponse)(nil), "feast.serving.QueryFeaturesResponse")
	proto.RegisterMapType((map[string]*Entity)(nil), "feast.serving.QueryFeaturesResponse.EntitiesEntry")
	proto.RegisterType((*Entity)(nil), "feast.serving.Entity")
	proto.RegisterMapType((map[string]*FeatureValue)(nil), "feast.serving.Entity.FeaturesEntry")
	proto.RegisterType((*FeatureValue)(nil), "feast.serving.FeatureValue")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServingServiceClient is the client API for ServingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServingServiceClient interface {
	// Query features from Feast serving storage
	QueryFeatures(ctx context.Context, in *QueryFeaturesRequest, opts ...grpc.CallOption) (*QueryFeaturesResponse, error)
}

type servingServiceClient struct {
	cc *grpc.ClientConn
}

func NewServingServiceClient(cc *grpc.ClientConn) ServingServiceClient {
	return &servingServiceClient{cc}
}

func (c *servingServiceClient) QueryFeatures(ctx context.Context, in *QueryFeaturesRequest, opts ...grpc.CallOption) (*QueryFeaturesResponse, error) {
	out := new(QueryFeaturesResponse)
	err := c.cc.Invoke(ctx, "/feast.serving.ServingService/QueryFeatures", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServingServiceServer is the server API for ServingService service.
type ServingServiceServer interface {
	// Query features from Feast serving storage
	QueryFeatures(context.Context, *QueryFeaturesRequest) (*QueryFeaturesResponse, error)
}

func RegisterServingServiceServer(s *grpc.Server, srv ServingServiceServer) {
	s.RegisterService(&_ServingService_serviceDesc, srv)
}

func _ServingService_QueryFeatures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryFeaturesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServingServiceServer).QueryFeatures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feast.serving.ServingService/QueryFeatures",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServingServiceServer).QueryFeatures(ctx, req.(*QueryFeaturesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "feast.serving.ServingService",
	HandlerType: (*ServingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryFeatures",
			Handler:    _ServingService_QueryFeatures_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "feast/serving/ServingService.proto",
}

func init() {
	proto.RegisterFile("feast/serving/ServingService.proto", fileDescriptor_ServingService_09640b0db2e7d867)
}

var fileDescriptor_ServingService_09640b0db2e7d867 = []byte{
	// 433 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xd1, 0x8a, 0xd4, 0x30,
	0x14, 0x35, 0x33, 0xb8, 0x6c, 0xef, 0x5a, 0x95, 0xe0, 0x62, 0xa9, 0xa2, 0x43, 0xd7, 0x87, 0x82,
	0x90, 0x60, 0x7d, 0x19, 0x7c, 0x11, 0x17, 0x56, 0x98, 0x97, 0x65, 0xad, 0x22, 0xb2, 0xf8, 0xd2,
	0xd9, 0xb9, 0x53, 0xeb, 0x4e, 0x9b, 0xda, 0xa4, 0x03, 0xfd, 0x1e, 0x3f, 0xcb, 0x9f, 0x91, 0x49,
	0xd2, 0x99, 0x66, 0x18, 0x74, 0x9f, 0xda, 0xe4, 0x9e, 0x7b, 0xce, 0x49, 0xee, 0x09, 0x44, 0x4b,
	0xcc, 0xa4, 0xe2, 0x12, 0x9b, 0x75, 0x51, 0xe5, 0xfc, 0xb3, 0xf9, 0xea, 0xcf, 0x0d, 0xb2, 0xba,
	0x11, 0x4a, 0x50, 0x5f, 0x63, 0x98, 0xc5, 0x84, 0x2f, 0x73, 0x21, 0xf2, 0x15, 0x72, 0x5d, 0x9c,
	0xb7, 0x4b, 0xae, 0x8a, 0x12, 0xa5, 0xca, 0xca, 0xda, 0xe0, 0xc3, 0xa7, 0x86, 0x53, 0x75, 0x35,
	0x4a, 0xfe, 0x35, 0x5b, 0xb5, 0x96, 0x28, 0xaa, 0xe1, 0xc9, 0xa7, 0x16, 0x9b, 0xee, 0x23, 0x66,
	0xaa, 0x6d, 0x50, 0xa6, 0xf8, 0xab, 0x45, 0xa9, 0xe8, 0x0b, 0x00, 0xac, 0x54, 0xa1, 0xba, 0xcb,
	0xac, 0xc4, 0x80, 0x4c, 0x48, 0xec, 0xa5, 0x83, 0x1d, 0x1a, 0xc2, 0xb1, 0x59, 0xcd, 0x16, 0xc1,
	0x68, 0x32, 0x8e, 0xbd, 0x74, 0xbb, 0xa6, 0xcf, 0xc1, 0x5b, 0x1a, 0xba, 0xd9, 0x22, 0x18, 0xeb,
	0xe2, 0x6e, 0x23, 0xfa, 0x43, 0xe0, 0x74, 0x4f, 0x52, 0xd6, 0xa2, 0x92, 0xf8, 0x5f, 0xcd, 0x4b,
	0xab, 0x59, 0xa0, 0xd4, 0x9a, 0x27, 0x49, 0xc2, 0x9c, 0x7b, 0x60, 0x07, 0x79, 0xd9, 0x85, 0x6d,
	0xba, 0xa8, 0x54, 0xd3, 0xa5, 0x5b, 0x8e, 0x30, 0x05, 0xdf, 0x29, 0xd1, 0xc7, 0x30, 0xbe, 0xc5,
	0xce, 0x2a, 0x6f, 0x7e, 0xe9, 0x6b, 0xb8, 0xbf, 0xde, 0xdc, 0x56, 0x30, 0x9a, 0x90, 0xf8, 0x24,
	0x39, 0xdd, 0xd3, 0xd3, 0xed, 0x5d, 0x6a, 0x30, 0xef, 0x46, 0x53, 0x12, 0xfd, 0x26, 0x70, 0x64,
	0x76, 0xe9, 0x7b, 0x38, 0xb6, 0xa7, 0x96, 0x01, 0xd1, 0x76, 0xcf, 0x0e, 0xb6, 0xb3, 0xde, 0xb0,
	0xf5, 0xd7, 0x37, 0x85, 0xdf, 0xc0, 0x77, 0x4a, 0x07, 0xfc, 0xbd, 0x71, 0xfd, 0x3d, 0xdb, 0x13,
	0xb0, 0xed, 0x7a, 0xe0, 0x43, 0x97, 0x0d, 0x3c, 0x18, 0x96, 0x68, 0xdc, 0xd3, 0x10, 0x4d, 0x43,
	0x2d, 0x8d, 0x8e, 0x0b, 0x1b, 0x76, 0xd3, 0x29, 0x78, 0xdb, 0x6c, 0x59, 0xd1, 0x90, 0x99, 0xf4,
	0xb1, 0x3e, 0x7d, 0xec, 0x4b, 0x8f, 0x48, 0x77, 0xe0, 0xa4, 0x82, 0x87, 0x6e, 0x94, 0xe9, 0x77,
	0xf0, 0x9d, 0x81, 0xd1, 0xb3, 0x7f, 0x8f, 0x53, 0x27, 0x33, 0x7c, 0x75, 0x97, 0x99, 0x47, 0xf7,
	0xce, 0xaf, 0xc1, 0x7d, 0x24, 0xe7, 0x8f, 0xac, 0xfc, 0x87, 0xab, 0xd9, 0xd5, 0xc6, 0xe9, 0xf5,
	0x34, 0x2f, 0xd4, 0x8f, 0x76, 0xce, 0x6e, 0x44, 0xc9, 0x73, 0xf1, 0x13, 0x6f, 0xb9, 0x79, 0x25,
	0xfa, 0x1c, 0x92, 0xe7, 0x58, 0x61, 0x93, 0x29, 0x5c, 0xf0, 0x5c, 0x70, 0xe7, 0x4d, 0xce, 0x8f,
	0x34, 0xe4, 0xed, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xea, 0x93, 0x15, 0xf3, 0xab, 0x03, 0x00,
	0x00,
}
