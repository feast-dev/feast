// Code generated by protoc-gen-go. DO NOT EDIT.
// source: feast/specs/FeatureGroupSpec.proto

package specs // import "github.com/gojek/feast/protos/generated/go/feast/specs"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FeatureGroupSpec struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Tags                 []string          `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	Options              map[string]string `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FeatureGroupSpec) Reset()         { *m = FeatureGroupSpec{} }
func (m *FeatureGroupSpec) String() string { return proto.CompactTextString(m) }
func (*FeatureGroupSpec) ProtoMessage()    {}
func (*FeatureGroupSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_FeatureGroupSpec_863105520104cb04, []int{0}
}
func (m *FeatureGroupSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeatureGroupSpec.Unmarshal(m, b)
}
func (m *FeatureGroupSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeatureGroupSpec.Marshal(b, m, deterministic)
}
func (dst *FeatureGroupSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeatureGroupSpec.Merge(dst, src)
}
func (m *FeatureGroupSpec) XXX_Size() int {
	return xxx_messageInfo_FeatureGroupSpec.Size(m)
}
func (m *FeatureGroupSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_FeatureGroupSpec.DiscardUnknown(m)
}

var xxx_messageInfo_FeatureGroupSpec proto.InternalMessageInfo

func (m *FeatureGroupSpec) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FeatureGroupSpec) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *FeatureGroupSpec) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

func init() {
	proto.RegisterType((*FeatureGroupSpec)(nil), "feast.specs.FeatureGroupSpec")
	proto.RegisterMapType((map[string]string)(nil), "feast.specs.FeatureGroupSpec.OptionsEntry")
}

func init() {
	proto.RegisterFile("feast/specs/FeatureGroupSpec.proto", fileDescriptor_FeatureGroupSpec_863105520104cb04)
}

var fileDescriptor_FeatureGroupSpec_863105520104cb04 = []byte{
	// 245 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4a, 0x4b, 0x4d, 0x2c,
	0x2e, 0xd1, 0x2f, 0x2e, 0x48, 0x4d, 0x2e, 0xd6, 0x77, 0x4b, 0x4d, 0x2c, 0x29, 0x2d, 0x4a, 0x75,
	0x2f, 0xca, 0x2f, 0x2d, 0x08, 0x2e, 0x48, 0x4d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2,
	0x06, 0xab, 0xd1, 0x03, 0xab, 0x91, 0x92, 0xc5, 0xa2, 0x01, 0xa1, 0x56, 0x69, 0x07, 0x23, 0x97,
	0x00, 0xba, 0x31, 0x42, 0x7c, 0x5c, 0x4c, 0x99, 0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41,
	0x4c, 0x99, 0x29, 0x42, 0x42, 0x5c, 0x2c, 0x25, 0x89, 0xe9, 0xc5, 0x12, 0x4c, 0x0a, 0xcc, 0x1a,
	0x9c, 0x41, 0x60, 0xb6, 0x90, 0x0b, 0x17, 0x7b, 0x7e, 0x41, 0x49, 0x66, 0x7e, 0x5e, 0xb1, 0x04,
	0xb3, 0x02, 0xb3, 0x06, 0xb7, 0x91, 0x96, 0x1e, 0x92, 0xb5, 0x7a, 0x18, 0x4e, 0xf3, 0x87, 0x28,
	0x76, 0xcd, 0x2b, 0x29, 0xaa, 0x0c, 0x82, 0x69, 0x95, 0xb2, 0xe2, 0xe2, 0x41, 0x96, 0x10, 0x12,
	0xe0, 0x62, 0xce, 0x4e, 0xad, 0x84, 0x5a, 0x0d, 0x62, 0x0a, 0x89, 0x70, 0xb1, 0x96, 0x25, 0xe6,
	0x94, 0xa6, 0x4a, 0x30, 0x81, 0xc5, 0x20, 0x1c, 0x2b, 0x26, 0x0b, 0x46, 0xa7, 0x18, 0x2e, 0x64,
	0x8f, 0x3a, 0x89, 0xa2, 0x5b, 0x19, 0x00, 0xf2, 0x60, 0x94, 0x59, 0x7a, 0x66, 0x49, 0x46, 0x69,
	0x92, 0x5e, 0x72, 0x7e, 0xae, 0x7e, 0x7a, 0x7e, 0x56, 0x6a, 0xb6, 0x3e, 0x24, 0x40, 0xc0, 0xde,
	0x2f, 0xd6, 0x4f, 0x4f, 0xcd, 0x4b, 0x2d, 0x4a, 0x2c, 0x49, 0x4d, 0xd1, 0x4f, 0xcf, 0xd7, 0x47,
	0x0a, 0xaa, 0x24, 0x36, 0xb0, 0x02, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc3, 0xb3, 0x0b,
	0xcf, 0x71, 0x01, 0x00, 0x00,
}
